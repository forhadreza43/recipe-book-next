{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///E:/ProgrammingHero/Milestone_10/Module_57/recipe-book/auth.js"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport Google from \"next-auth/providers/google\";\nimport Credentials from \"next-auth/providers/credentials\";\n\nexport const { auth, handlers, signIn, signOut } = NextAuth({\n  session: { strategy: \"jwt\" },\n  pages: { signIn: \"/login\" },\n  providers: [\n    Google({\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    }),\n    Credentials({\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"email\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      authorize: async (credentials) => {\n        try {\n          const res = await fetch(\n            `${process.env.NEXT_PUBLIC_API_URL}/auth/login`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                email: credentials.email,\n                password: credentials.password,\n              }),\n            }\n          );\n\n          if (!res.ok) {\n            const error = await res.json();\n            throw new Error(error.message || \"Invalid credentials\");\n          }\n\n          const data = await res.json();\n\n          return {\n            ...data.user,\n            accessToken: data.accessToken,\n          };\n        } catch (error) {\n          console.error(\"Authorization error:\", error);\n          return null;\n        }\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, user, account }) {\n      if (account && user) {\n        return { ...token, ...user };\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      session.user = token;\n      return session;\n    },\n  },\n});\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEO,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAA,kKAAQ,EAAC;IAC1D,SAAS;QAAE,UAAU;IAAM;IAC3B,OAAO;QAAE,QAAQ;IAAS;IAC1B,WAAW;QACT,IAAA,kKAAM,EAAC;YACL,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;QACA,IAAA,uKAAW,EAAC;YACV,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,WAAW,OAAO;gBAChB,IAAI;oBACF,MAAM,MAAM,MAAM,MAChB,qFAAmC,WAAW,CAAC,EAC/C;wBACE,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,MAAM,KAAK,SAAS,CAAC;4BACnB,OAAO,YAAY,KAAK;4BACxB,UAAU,YAAY,QAAQ;wBAChC;oBACF;oBAGF,IAAI,CAAC,IAAI,EAAE,EAAE;wBACX,MAAM,QAAQ,MAAM,IAAI,IAAI;wBAC5B,MAAM,IAAI,MAAM,MAAM,OAAO,IAAI;oBACnC;oBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;oBAE3B,OAAO;wBACL,GAAG,KAAK,IAAI;wBACZ,aAAa,KAAK,WAAW;oBAC/B;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,wBAAwB;oBACtC,OAAO;gBACT;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;YAChC,IAAI,WAAW,MAAM;gBACnB,OAAO;oBAAE,GAAG,KAAK;oBAAE,GAAG,IAAI;gBAAC;YAC7B;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,GAAG;YACf,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///E:/ProgrammingHero/Milestone_10/Module_57/recipe-book/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["//api/auth/[...nextauth]/route.js\nimport { handlers } from \"@/auth\";\nexport const { GET, POST } = handlers;\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;AACjC;;AACO,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,kHAAQ","debugId":null}}]
}
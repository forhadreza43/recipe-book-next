{"version":3,"sources":["turbopack:///[project]/app/register/page.jsx"],"sourcesContent":["\"use client\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { signIn } from \"next-auth/react\";\n\nexport default function Register() {\n  const router = useRouter();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [photoURL, setPhotoURL] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    // // Client-side password validation\n    // const hasUppercase = /[A-Z]/.test(password);\n    // const hasLowercase = /[a-z]/.test(password);\n    // const isLongEnough = password.length >= 6;\n\n    // if (!hasUppercase || !hasLowercase || !isLongEnough) {\n    //   setError(\n    //     \"Password must be at least 6 characters long and include both uppercase and lowercase letters.\"\n    //   );\n    //   return;\n    // }\n\n    try {\n      // Step 1: Register user in backend\n      const res = await fetch(\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/register`,\n        {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n            photoURL,\n          }),\n        }\n      );\n\n      if (!res.ok) {\n        const { message } = await res.json();\n        throw new Error(message || \"Registration failed\");\n      }\n\n      const data = await res.json();\n      console.log(\"Registration successful:\", data);\n\n      // Step 2: Automatically sign in with credentials\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email,\n        password,\n      });\n\n      if (result?.error) {\n        setError(result.error);\n      } else {\n        router.push(\"/\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center\">\n      <div className=\"w-full max-w-md rounded-xl border border-orange-300 bg-white p-8 shadow-md dark:bg-gray-800\">\n        <h2 className=\"mb-6 text-center text-3xl font-bold text-orange-600\">\n          Register\n        </h2>\n        <form onSubmit={handleRegister} className=\"space-y-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            required\n            className=\"input-field\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            required\n            className=\"input-field\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            className=\"input-field\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {error && <p className=\"text-sm text-red-500\">{error}</p>}\n          <input\n            type=\"url\"\n            placeholder=\"Photo URL\"\n            className=\"input-field\"\n            value={photoURL}\n            onChange={(e) => setPhotoURL(e.target.value)}\n          />\n\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-orange-500 py-2 text-white hover:bg-orange-600\"\n          >\n            Register\n          </button>\n        </form>\n\n        <p className=\"mt-4 text-center text-sm text-gray-600 dark:text-gray-200\">\n          Already have an account?{\" \"}\n          <Link href=\"/login\" className=\"text-orange-600\">\n            Login\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"+EACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAEe,SAAS,IACtB,IAAM,EAAS,CAAA,EAAA,EAAA,SAAA,AAAS,IAClB,CAAC,EAAM,EAAQ,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,IAC3B,CAAC,EAAO,EAAS,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,IAC7B,CAAC,EAAU,EAAY,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,IACnC,CAAC,EAAU,EAAY,CAAG,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAS,IACnC,CAAC,EAAO,EAAS,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,IAE7B,EAAiB,MAAO,IAC5B,EAAE,cAAc,GAChB,EAAS,IAcT,GAAI,CAEF,IAAM,EAAM,MAAM,MAChB,8DACA,CACE,OAAQ,OACR,QAHiC,AAGxB,CACP,aAJ6C,CAAC,CAI9B,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,MACnB,QACA,WACA,EACA,UACF,EACF,GAGF,GAAI,CAAC,EAAI,EAAE,CAAE,CACX,GAAM,SAAE,CAAO,CAAE,CAAG,MAAM,EAAI,IAAI,EAClC,OAAM,AAAI,MAAM,GAAW,sBAC7B,CAEA,IAAM,EAAO,MAAM,EAAI,IAAI,GAC3B,QAAQ,GAAG,CAAC,2BAA4B,GAGxC,IAAM,EAAS,MAAM,CAAA,EAAA,EAAA,MAAA,AAAM,EAAC,cAAe,CACzC,UAAU,QACV,WACA,CACF,GAEI,GAAQ,MACV,CADiB,CACR,EAAO,KAAK,EAErB,EAAO,IAAI,CAAC,IAEhB,CAAE,MAAO,EAAK,CACZ,EAAS,EAAI,OAAO,CACtB,CACF,EAEA,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,yDACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wGACb,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,+DAAsD,aAGpE,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,SAAU,EAAgB,UAAU,sBACxC,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CACC,KAAK,OACL,YAAY,YACZ,QAAQ,CAAA,CAAA,EACR,UAAU,cACV,MAAO,EACP,SAAU,AAAC,GAAM,EAAQ,EAAE,MAAM,CAAC,KAAK,IAEzC,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CACC,KAAK,QACL,YAAY,QACZ,QAAQ,CAAA,CAAA,EACR,UAAU,cACV,MAAO,EACP,SAAU,AAAC,GAAM,EAAS,EAAE,MAAM,CAAC,KAAK,IAE1C,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CACC,KAAK,WACL,YAAY,WACZ,QAAQ,CAAA,CAAA,EACR,UAAU,cACV,MAAO,EACP,SAAU,AAAC,GAAM,EAAY,EAAE,MAAM,CAAC,KAAK,IAE5C,GAAS,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,gCAAwB,IAC/C,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CACC,KAAK,MACL,YAAY,YACZ,UAAU,cACV,MAAO,EACP,SAAU,AAAC,GAAM,EAAY,EAAE,MAAM,CAAC,KAAK,IAG7C,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CACC,KAAK,SACL,UAAU,4EACX,gBAKH,CAAA,EAAA,EAAA,IAAA,EAAC,IAAA,CAAE,UAAU,sEAA4D,2BAC9C,IACzB,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAI,CAAA,CAAC,KAAK,SAAS,UAAU,2BAAkB,iBAO1D"}
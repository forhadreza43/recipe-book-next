/* [next]/internal/font/google/geist_2ae47f08.module.css [app-client] (css) */
@font-face {
  font-family: Geist;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/8a480f0b521d4e75-s.8e0177b5.woff2") format("woff2");
  unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;
}

@font-face {
  font-family: Geist;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/7178b3e590c64307-s.b97b3418.woff2") format("woff2");
  unicode-range: U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

@font-face {
  font-family: Geist;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/caa3a2e1cccd8315-s.p.6435ea53.woff2") format("woff2");
  unicode-range: U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@font-face {
  font-family: Geist Fallback;
  src: local(Arial);
  ascent-override: 95.94%;
  descent-override: 28.16%;
  line-gap-override: 0.0%;
  size-adjust: 104.76%;
}

.geist_2ae47f08-module__h69qWW__className {
  font-family: Geist, Geist Fallback;
  font-style: normal;
}

.geist_2ae47f08-module__h69qWW__variable {
  --font-geist-sans: "Geist", "Geist Fallback";
}

/* [next]/internal/font/google/geist_mono_eb58308d.module.css [app-client] (css) */
@font-face {
  font-family: Geist Mono;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/4fa387ec64143e14-s.c1fdd6c2.woff2") format("woff2");
  unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;
}

@font-face {
  font-family: Geist Mono;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/bbc41e54d2fcbd21-s.799d8ef8.woff2") format("woff2");
  unicode-range: U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

@font-face {
  font-family: Geist Mono;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/797e433ab948586e-s.p.dbea232f.woff2") format("woff2");
  unicode-range: U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@font-face {
  font-family: Geist Mono Fallback;
  src: local(Arial);
  ascent-override: 74.67%;
  descent-override: 21.92%;
  line-gap-override: 0.0%;
  size-adjust: 134.59%;
}

.geist_mono_eb58308d-module__w_p2Lq__className {
  font-family: Geist Mono, Geist Mono Fallback;
  font-style: normal;
}

.geist_mono_eb58308d-module__w_p2Lq__variable {
  --font-geist-mono: "Geist Mono", "Geist Mono Fallback";
}

/* [project]/app/globals.css [app-client] (css) */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: rgba(0, 0, 0, 0);
      --tw-gradient-via: rgba(0, 0, 0, 0);
      --tw-gradient-to: rgba(0, 0, 0, 0);
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-animation-delay: 0s;
      --tw-animation-direction: normal;
      --tw-animation-duration: initial;
      --tw-animation-fill-mode: none;
      --tw-animation-iteration-count: 1;
      --tw-enter-blur: 0;
      --tw-enter-opacity: 1;
      --tw-enter-rotate: 0;
      --tw-enter-scale: 1;
      --tw-enter-translate-x: 0;
      --tw-enter-translate-y: 0;
      --tw-exit-blur: 0;
      --tw-exit-opacity: 1;
      --tw-exit-rotate: 0;
      --tw-exit-scale: 1;
      --tw-exit-translate-x: 0;
      --tw-exit-translate-y: 0;
    }

    ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: rgba(0, 0, 0, 0);
      --tw-gradient-via: rgba(0, 0, 0, 0);
      --tw-gradient-to: rgba(0, 0, 0, 0);
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 rgba(0, 0, 0, 0);
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-animation-delay: 0s;
      --tw-animation-direction: normal;
      --tw-animation-duration: initial;
      --tw-animation-fill-mode: none;
      --tw-animation-iteration-count: 1;
      --tw-enter-blur: 0;
      --tw-enter-opacity: 1;
      --tw-enter-rotate: 0;
      --tw-enter-scale: 1;
      --tw-enter-translate-x: 0;
      --tw-enter-translate-y: 0;
      --tw-exit-blur: 0;
      --tw-exit-opacity: 1;
      --tw-exit-rotate: 0;
      --tw-exit-scale: 1;
      --tw-exit-translate-x: 0;
      --tw-exit-translate-y: 0;
    }
  }
}

@layer theme {
  :root, :host {
    --color-red-50: #fef2f2;
    --color-red-100: #ffe2e2;
    --color-red-200: #ffcaca;
    --color-red-300: #ffa3a3;
    --color-red-400: #ff6568;
    --color-red-500: #fb2c36;
    --color-red-600: #e40014;
    --color-red-800: #9f0712;
    --color-red-900: #82181a;
    --color-orange-50: #fff7ed;
    --color-orange-100: #ffedd5;
    --color-orange-200: #ffd7a8;
    --color-orange-300: #ffb96d;
    --color-orange-400: #ff8b1a;
    --color-orange-500: #fe6e00;
    --color-orange-600: #f05100;
    --color-orange-700: #c53c00;
    --color-orange-800: #9f2d00;
    --color-orange-900: #7e2a0c;
    --color-yellow-300: #ffe02a;
    --color-yellow-400: #fac800;
    --color-yellow-500: #edb200;
    --color-green-50: #f0fdf4;
    --color-green-100: #dcfce7;
    --color-green-200: #b9f8cf;
    --color-green-300: #7bf1a8;
    --color-green-400: #05df72;
    --color-green-600: #00a544;
    --color-green-800: #016630;
    --color-green-900: #0d542b;
    --color-sky-500: #00a5ef;
    --color-blue-50: #eff6ff;
    --color-blue-200: #bedbff;
    --color-blue-300: #90c5ff;
    --color-blue-400: #54a2ff;
    --color-blue-600: #155dfc;
    --color-blue-800: #193cb8;
    --color-blue-900: #1c398e;
    --color-purple-50: #faf5ff;
    --color-purple-200: #e9d5ff;
    --color-purple-300: #d9b3ff;
    --color-purple-400: #c07eff;
    --color-purple-600: #9810fa;
    --color-purple-800: #6e11b0;
    --color-purple-900: #59168b;
    --color-gray-50: #f9fafb;
    --color-gray-100: #f3f4f6;
    --color-gray-200: #e5e7eb;
    --color-gray-300: #d1d5dc;
    --color-gray-400: #99a1af;
    --color-gray-500: #6a7282;
    --color-gray-600: #4a5565;
    --color-gray-700: #364153;
    --color-gray-800: #1e2939;
    --color-gray-900: #101828;
    --color-neutral-50: #fafafa;
    --color-neutral-100: #f5f5f5;
    --color-neutral-200: #e5e5e5;
    --color-neutral-300: #d4d4d4;
    --color-neutral-400: #a1a1a1;
    --color-neutral-500: #737373;
    --color-neutral-800: #262626;
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-md: 28rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tight: -.025em;
    --leading-relaxed: 1.625;
    --radius-2xl: 1rem;
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-geist-sans);
    --default-mono-font-family: var(--font-geist-mono);
    --color-accent: var(--accent);
    --color-secondary: var(--secondary);
    --color-primary: var(--primary);
  }

  @supports (color: color(display-p3 0 0 0)) {
    :root, :host {
      --color-red-50: color(display-p3 .988669 .951204 .950419);
      --color-red-100: color(display-p3 .980386 .889727 .887779);
      --color-red-200: color(display-p3 .969562 .798149 .794299);
      --color-red-300: color(display-p3 .956922 .651886 .645122);
      --color-red-400: color(display-p3 .933534 .431676 .423491);
      --color-red-500: color(display-p3 .903738 .262579 .253307);
      --color-red-600: color(display-p3 .830323 .140383 .133196);
      --color-red-800: color(display-p3 .569606 .121069 .108493);
      --color-red-900: color(display-p3 .466906 .133198 .12139);
      --color-orange-50: color(display-p3 .99533 .970132 .933499);
      --color-orange-100: color(display-p3 .988762 .931393 .843273);
      --color-orange-200: color(display-p3 .974647 .84705 .680111);
      --color-orange-300: color(display-p3 .96801 .734346 .464159);
      --color-orange-400: color(display-p3 .950192 .561807 .211017);
      --color-orange-500: color(display-p3 .946589 .449788 .0757345);
      --color-orange-600: color(display-p3 .887467 .341665 .0219962);
      --color-orange-700: color(display-p3 .729844 .257256 .0511062);
      --color-orange-800: color(display-p3 .575591 .21198 .082665);
      --color-orange-900: color(display-p3 .457137 .188093 .0897628);
      --color-yellow-300: color(display-p3 .982669 .880884 .32102);
      --color-yellow-400: color(display-p3 .959941 .790171 .0585198);
      --color-yellow-500: color(display-p3 .903651 .703062 .0745389);
      --color-green-50: color(display-p3 .950677 .990571 .959366);
      --color-green-100: color(display-p3 .885269 .984329 .910368);
      --color-green-200: color(display-p3 .776442 .964383 .823412);
      --color-green-300: color(display-p3 .600292 .935514 .68114);
      --color-green-400: color(display-p3 .399536 .862346 .49324);
      --color-green-600: color(display-p3 .243882 .640824 .294808);
      --color-green-800: color(display-p3 .168568 .395123 .211217);
      --color-green-900: color(display-p3 .147288 .323577 .185694);
      --color-sky-500: color(display-p3 .219113 .639027 .931479);
      --color-blue-50: color(display-p3 .941826 .963151 .995385);
      --color-blue-200: color(display-p3 .76688 .855207 .987483);
      --color-blue-300: color(display-p3 .602559 .767214 .993938);
      --color-blue-400: color(display-p3 .397443 .62813 .992116);
      --color-blue-600: color(display-p3 .174493 .358974 .950247);
      --color-blue-800: color(display-p3 .134023 .230647 .695537);
      --color-blue-900: color(display-p3 .136395 .219428 .537145);
      --color-purple-50: color(display-p3 .977045 .961759 .996715);
      --color-purple-200: color(display-p3 .901181 .835978 .992237);
      --color-purple-300: color(display-p3 .829394 .703737 .996084);
      --color-purple-400: color(display-p3 .719919 .492497 .995173);
      --color-purple-600: color(display-p3 .546729 .130167 .94439);
      --color-purple-800: color(display-p3 .393513 .10339 .664476);
      --color-purple-900: color(display-p3 .321698 .107597 .524563);
      --color-gray-50: color(display-p3 .977213 .98084 .985102);
      --color-gray-100: color(display-p3 .953567 .956796 .964321);
      --color-gray-200: color(display-p3 .899787 .906171 .92106);
      --color-gray-300: color(display-p3 .822033 .835264 .858521);
      --color-gray-400: color(display-p3 .605734 .630385 .680158);
      --color-gray-500: color(display-p3 .421287 .446085 .504784);
      --color-gray-600: color(display-p3 .297358 .332176 .39043);
      --color-gray-700: color(display-p3 .219968 .253721 .318679);
      --color-gray-800: color(display-p3 .125854 .159497 .216835);
      --color-gray-900: color(display-p3 .070423 .0928982 .151928);
      --color-neutral-50: color(display-p3 .980256 .980256 .980256);
      --color-neutral-100: color(display-p3 .960587 .960587 .960587);
      --color-neutral-200: color(display-p3 .898161 .898161 .898161);
      --color-neutral-300: color(display-p3 .831444 .831444 .831444);
      --color-neutral-400: color(display-p3 .630163 .630163 .630163);
      --color-neutral-500: color(display-p3 .451519 .451519 .451519);
      --color-neutral-800: color(display-p3 .149382 .149382 .149382);
    }
  }

  @supports (color: lab(0% 0 0)) {
    :root, :host {
      --color-red-50: lab(96.5005% 4.18511 1.52329);
      --color-red-100: lab(92.243% 10.2865 3.83865);
      --color-red-200: lab(86.017% 19.8815 7.75869);
      --color-red-300: lab(76.5514% 36.4219 15.5335);
      --color-red-400: lab(63.7053% 60.7449 31.3109);
      --color-red-500: lab(55.4814% 75.0732 48.8528);
      --color-red-600: lab(48.4493% 77.4328 61.5452);
      --color-red-800: lab(33.7174% 55.8993 41.0293);
      --color-red-900: lab(28.5139% 44.5539 29.0463);
      --color-orange-50: lab(97.7008% 1.53738 5.90646);
      --color-orange-100: lab(94.7127% 3.58391 14.3151);
      --color-orange-200: lab(88.4871% 9.94918 28.8378);
      --color-orange-300: lab(80.8059% 21.7313 50.4455);
      --color-orange-400: lab(70.0429% 42.5156 75.8207);
      --color-orange-500: lab(64.272% 57.1788 90.3583);
      --color-orange-600: lab(57.1026% 64.2584 89.8886);
      --color-orange-700: lab(46.4615% 57.7275 70.8507);
      --color-orange-800: lab(37.1566% 46.6433 50.5562);
      --color-orange-900: lab(30.2951% 36.0434 37.671);
      --color-yellow-300: lab(89.7033% -.480324 84.4917);
      --color-yellow-400: lab(83.2664% 8.65132 106.895);
      --color-yellow-500: lab(76.3898% 14.5258 98.4589);
      --color-green-50: lab(98.1563% -5.60117 2.75913);
      --color-green-100: lab(96.186% -13.8464 6.52362);
      --color-green-200: lab(92.4222% -26.4702 12.9427);
      --color-green-300: lab(86.9953% -47.2691 25.0054);
      --color-green-400: lab(78.503% -64.9265 39.7492);
      --color-green-600: lab(59.0978% -58.6621 41.2579);
      --color-green-800: lab(37.4616% -36.7971 22.9692);
      --color-green-900: lab(30.797% -29.6927 17.382);
      --color-sky-500: lab(63.3038% -18.433 -51.0407);
      --color-blue-50: lab(96.492% -1.14647 -5.11479);
      --color-blue-200: lab(86.15% -4.04379 -21.0797);
      --color-blue-300: lab(77.5052% -6.4629 -36.42);
      --color-blue-400: lab(65.0361% -1.42062 -56.9803);
      --color-blue-600: lab(44.0605% 29.0279 -86.0352);
      --color-blue-800: lab(30.2514% 27.7854 -70.2699);
      --color-blue-900: lab(26.1542% 15.7545 -51.5504);
      --color-purple-50: lab(97.1626% 2.99937 -4.13398);
      --color-purple-200: lab(87.8405% 13.4282 -18.7159);
      --color-purple-300: lab(78.3298% 26.2195 -34.9499);
      --color-purple-400: lab(63.6946% 47.6127 -59.2066);
      --color-purple-600: lab(43.0295% 75.21 -86.5669);
      --color-purple-800: lab(30.6017% 56.7637 -64.4751);
      --color-purple-900: lab(24.9401% 45.2703 -51.2728);
      --color-gray-50: lab(98.2596% -.247031 -.706708);
      --color-gray-100: lab(96.1596% -.082314 -1.13575);
      --color-gray-200: lab(91.6229% -.159085 -2.26791);
      --color-gray-300: lab(85.1236% -.612259 -3.7138);
      --color-gray-400: lab(65.9269% -.832707 -8.17474);
      --color-gray-500: lab(47.7841% -.393212 -10.0268);
      --color-gray-600: lab(35.6337% -1.58697 -10.8425);
      --color-gray-700: lab(27.1134% -.956401 -12.3224);
      --color-gray-800: lab(16.1051% -1.18239 -11.7533);
      --color-gray-900: lab(8.11897% .811279 -12.254);
      --color-neutral-50: lab(98.26% 0 0);
      --color-neutral-100: lab(96.52% -.0000596046 0);
      --color-neutral-200: lab(90.952% -.0000596046 0);
      --color-neutral-300: lab(84.92% 0 0);
      --color-neutral-400: lab(66.128% -.0000298023 .0000119209);
      --color-neutral-500: lab(48.496% 0 0);
      --color-neutral-800: lab(15.204% 0 0);
    }
  }
}

@layer base {
  *, :after, :before {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::-webkit-file-upload-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  ::-webkit-file-upload-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: rgba(0, 0, 0, 0);
    border-radius: 0;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:-moz-any([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup option:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:-moz-any([multiple], [size])) optgroup option:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:is([multiple], [size])) optgroup option:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    padding-left: 20px;
  }

  :where(select:-webkit-any([multiple], [size])) optgroup option:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :where(select:-moz-any([multiple], [size])) optgroup option:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :where(select:is([multiple], [size])) optgroup option:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    padding-right: 20px;
  }

  :not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::-webkit-file-upload-button {
    margin-right: 4px;
  }

  :not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::file-selector-button {
    margin-right: 4px;
  }

  :not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)))::file-selector-button {
    margin-right: 4px;
  }

  :-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::-webkit-file-upload-button {
    margin-left: 4px;
  }

  :-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::file-selector-button {
    margin-left: 4px;
  }

  :is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))::file-selector-button {
    margin-left: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-top: 0;
    padding-bottom: 0;
  }

  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  input:where([type="button"], [type="reset"], [type="submit"]) {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::-webkit-file-upload-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::file-selector-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  @supports (color: color(display-p3 0 0 0)) {
    [data-theme="light"] {
      --color-base-100: color(display-p3 1 1 1);
      --color-base-200: color(display-p3 .973691 .973691 .973691);
      --color-base-300: color(display-p3 .93448 .93448 .93448);
      --color-base-content: color(display-p3 .0937957 .093793 .104806);
      --color-primary: color(display-p3 .244907 .16847 .802628);
      --color-primary-content: color(display-p3 .883035 .90499 .993138);
      --color-secondary: color(display-p3 .880667 .26782 .587861);
      --color-secondary-content: color(display-p3 .964052 .897855 .939789);
      --color-accent: color(display-p3 .312493 .813034 .735662);
      --color-accent-content: color(display-p3 .128725 .296875 .284306);
      --color-neutral: color(display-p3 .0346186 .034606 .0427327);
      --color-neutral-content: color(display-p3 .894477 .894477 .905114);
      --color-info: color(display-p3 .297526 .717371 .972161);
      --color-info-content: color(display-p3 .0695709 .177759 .278667);
      --color-success: color(display-p3 .32762 .813141 .585553);
      --color-success-content: color(display-p3 .108674 .294366 .226358);
      --color-warning: color(display-p3 .94863 .728271 .0946339);
      --color-warning-content: color(display-p3 .441203 .212026 .0773632);
      --color-error: color(display-p3 .940178 .428237 .500757);
      --color-error-content: color(display-p3 .274274 .0392692 .0981547);
    }
  }

  @supports (color: lab(0% 0 0)) {
    [data-theme="light"] {
      --color-base-100: lab(100% 0 0);
      --color-base-200: lab(97.68% -.0000298023 .0000119209);
      --color-base-300: lab(94.2% 0 0);
      --color-base-content: lab(8.30603% .618212 -2.16573);
      --color-primary: lab(31.573% 49.867 -84.7065);
      --color-primary-content: lab(91.6577% 1.04591 -12.7199);
      --color-secondary: lab(56.234% 76.7852 -8.06803);
      --color-secondary-content: lab(92.6584% 9.01154 -3.15071);
      --color-accent: lab(75.1988% -53.3697 -2.27785);
      --color-accent-content: lab(28.81% -21.4781 -3.59725);
      --color-neutral: lab(2.45787% .239417 -.873864);
      --color-neutral-content: lab(90.6853% .399202 -1.45452);
      --color-info: lab(69.9876% -23.5256 -45.9352);
      --color-info-content: lab(17.4794% -5.25945 -21.1512);
      --color-success: lab(74.4967% -60.7579 19.4189);
      --color-success-content: lab(27.9355% -26.9592 5.46191);
      --color-warning: lab(79.2305% 16.6936 100.392);
      --color-warning-content: lab(30.7627% 30.2938 40.2828);
      --color-error: lab(64.1803% 63.0275 19.2122);
      --color-error-content: lab(14.1162% 34.0067 9.81536);
    }
  }

  :where(:root) {
    --lightningcss-light: initial;
    --lightningcss-dark: ;
    color-scheme: light;
    --color-base-100: #fff;
    --color-base-200: #f8f8f8;
    --color-base-300: #eee;
    --color-base-content: #18181b;
    --color-primary: #422ad5;
    --color-primary-content: #e0e7ff;
    --color-secondary: #f43098;
    --color-secondary-content: #f9e4f0;
    --color-accent: #00d1bb;
    --color-accent-content: #084d49;
    --color-neutral: #09090b;
    --color-neutral-content: #e4e4e7;
    --color-info: #00bafc;
    --color-info-content: #042e49;
    --color-success: #00d193;
    --color-success-content: #004c39;
    --color-warning: #f9b800;
    --color-warning-content: #793205;
    --color-error: #ff657f;
    --color-error-content: #4d0218;
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }

  @supports (color: color(display-p3 0 0 0)) {
    :where(:root) {
      --color-base-100: color(display-p3 1 1 1);
      --color-base-200: color(display-p3 .973691 .973691 .973691);
      --color-base-300: color(display-p3 .93448 .93448 .93448);
      --color-base-content: color(display-p3 .0937957 .093793 .104806);
      --color-primary: color(display-p3 .244907 .16847 .802628);
      --color-primary-content: color(display-p3 .883035 .90499 .993138);
      --color-secondary: color(display-p3 .880667 .26782 .587861);
      --color-secondary-content: color(display-p3 .964052 .897855 .939789);
      --color-accent: color(display-p3 .312493 .813034 .735662);
      --color-accent-content: color(display-p3 .128725 .296875 .284306);
      --color-neutral: color(display-p3 .0346186 .034606 .0427327);
      --color-neutral-content: color(display-p3 .894477 .894477 .905114);
      --color-info: color(display-p3 .297526 .717371 .972161);
      --color-info-content: color(display-p3 .0695709 .177759 .278667);
      --color-success: color(display-p3 .32762 .813141 .585553);
      --color-success-content: color(display-p3 .108674 .294366 .226358);
      --color-warning: color(display-p3 .94863 .728271 .0946339);
      --color-warning-content: color(display-p3 .441203 .212026 .0773632);
      --color-error: color(display-p3 .940178 .428237 .500757);
      --color-error-content: color(display-p3 .274274 .0392692 .0981547);
    }
  }

  @supports (color: lab(0% 0 0)) {
    :where(:root) {
      --color-base-100: lab(100% 0 0);
      --color-base-200: lab(97.68% -.0000298023 .0000119209);
      --color-base-300: lab(94.2% 0 0);
      --color-base-content: lab(8.30603% .618212 -2.16573);
      --color-primary: lab(31.573% 49.867 -84.7065);
      --color-primary-content: lab(91.6577% 1.04591 -12.7199);
      --color-secondary: lab(56.234% 76.7852 -8.06803);
      --color-secondary-content: lab(92.6584% 9.01154 -3.15071);
      --color-accent: lab(75.1988% -53.3697 -2.27785);
      --color-accent-content: lab(28.81% -21.4781 -3.59725);
      --color-neutral: lab(2.45787% .239417 -.873864);
      --color-neutral-content: lab(90.6853% .399202 -1.45452);
      --color-info: lab(69.9876% -23.5256 -45.9352);
      --color-info-content: lab(17.4794% -5.25945 -21.1512);
      --color-success: lab(74.4967% -60.7579 19.4189);
      --color-success-content: lab(27.9355% -26.9592 5.46191);
      --color-warning: lab(79.2305% 16.6936 100.392);
      --color-warning-content: lab(30.7627% 30.2938 40.2828);
      --color-error: lab(64.1803% 63.0275 19.2122);
      --color-error-content: lab(14.1162% 34.0067 9.81536);
    }
  }

  :root:has(input.theme-controller[value="light"]:checked) {
    --lightningcss-light: initial;
    --lightningcss-dark: ;
    color-scheme: light;
    --color-base-100: #fff;
    --color-base-200: #f8f8f8;
    --color-base-300: #eee;
    --color-base-content: #18181b;
    --color-primary: #422ad5;
    --color-primary-content: #e0e7ff;
    --color-secondary: #f43098;
    --color-secondary-content: #f9e4f0;
    --color-accent: #00d1bb;
    --color-accent-content: #084d49;
    --color-neutral: #09090b;
    --color-neutral-content: #e4e4e7;
    --color-info: #00bafc;
    --color-info-content: #042e49;
    --color-success: #00d193;
    --color-success-content: #004c39;
    --color-warning: #f9b800;
    --color-warning-content: #793205;
    --color-error: #ff657f;
    --color-error-content: #4d0218;
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }

  @supports (color: color(display-p3 0 0 0)) {
    :root:has(input.theme-controller[value="light"]:checked) {
      --color-base-100: color(display-p3 1 1 1);
      --color-base-200: color(display-p3 .973691 .973691 .973691);
      --color-base-300: color(display-p3 .93448 .93448 .93448);
      --color-base-content: color(display-p3 .0937957 .093793 .104806);
      --color-primary: color(display-p3 .244907 .16847 .802628);
      --color-primary-content: color(display-p3 .883035 .90499 .993138);
      --color-secondary: color(display-p3 .880667 .26782 .587861);
      --color-secondary-content: color(display-p3 .964052 .897855 .939789);
      --color-accent: color(display-p3 .312493 .813034 .735662);
      --color-accent-content: color(display-p3 .128725 .296875 .284306);
      --color-neutral: color(display-p3 .0346186 .034606 .0427327);
      --color-neutral-content: color(display-p3 .894477 .894477 .905114);
      --color-info: color(display-p3 .297526 .717371 .972161);
      --color-info-content: color(display-p3 .0695709 .177759 .278667);
      --color-success: color(display-p3 .32762 .813141 .585553);
      --color-success-content: color(display-p3 .108674 .294366 .226358);
      --color-warning: color(display-p3 .94863 .728271 .0946339);
      --color-warning-content: color(display-p3 .441203 .212026 .0773632);
      --color-error: color(display-p3 .940178 .428237 .500757);
      --color-error-content: color(display-p3 .274274 .0392692 .0981547);
    }
  }

  @supports (color: lab(0% 0 0)) {
    :root:has(input.theme-controller[value="light"]:checked) {
      --color-base-100: lab(100% 0 0);
      --color-base-200: lab(97.68% -.0000298023 .0000119209);
      --color-base-300: lab(94.2% 0 0);
      --color-base-content: lab(8.30603% .618212 -2.16573);
      --color-primary: lab(31.573% 49.867 -84.7065);
      --color-primary-content: lab(91.6577% 1.04591 -12.7199);
      --color-secondary: lab(56.234% 76.7852 -8.06803);
      --color-secondary-content: lab(92.6584% 9.01154 -3.15071);
      --color-accent: lab(75.1988% -53.3697 -2.27785);
      --color-accent-content: lab(28.81% -21.4781 -3.59725);
      --color-neutral: lab(2.45787% .239417 -.873864);
      --color-neutral-content: lab(90.6853% .399202 -1.45452);
      --color-info: lab(69.9876% -23.5256 -45.9352);
      --color-info-content: lab(17.4794% -5.25945 -21.1512);
      --color-success: lab(74.4967% -60.7579 19.4189);
      --color-success-content: lab(27.9355% -26.9592 5.46191);
      --color-warning: lab(79.2305% 16.6936 100.392);
      --color-warning-content: lab(30.7627% 30.2938 40.2828);
      --color-error: lab(64.1803% 63.0275 19.2122);
      --color-error-content: lab(14.1162% 34.0067 9.81536);
    }
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --lightningcss-light: ;
      --lightningcss-dark: initial;
      color-scheme: dark;
      --color-base-100: #1d232a;
      --color-base-200: #191e24;
      --color-base-300: #15191e;
      --color-base-content: #f2f8ff;
      --color-primary: #605dff;
      --color-primary-content: #edf1fe;
      --color-secondary: #f43098;
      --color-secondary-content: #f9e4f0;
      --color-accent: #00d1bb;
      --color-accent-content: #084d49;
      --color-neutral: #09090b;
      --color-neutral-content: #e4e4e7;
      --color-info: #00bafc;
      --color-info-content: #042e49;
      --color-success: #00d193;
      --color-success-content: #004c39;
      --color-warning: #f9b800;
      --color-warning-content: #793205;
      --color-error: #ff657f;
      --color-error-content: #4d0218;
      --radius-selector: .5rem;
      --radius-field: .25rem;
      --radius-box: .5rem;
      --size-selector: .25rem;
      --size-field: .25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }

    @supports (color: color(display-p3 0 0 0)) {
      :root {
        --color-base-100: color(display-p3 .118154 .136578 .162345);
        --color-base-200: color(display-p3 .101571 .117056 .139288);
        --color-base-300: color(display-p3 .084995 .0975948 .116397);
        --color-base-content: color(display-p3 .933919 .975165 1.04359);
        --color-primary: color(display-p3 .375125 .365608 .964847);
        --color-primary-content: color(display-p3 .933611 .94601 .992985);
        --color-secondary: color(display-p3 .880667 .26782 .587861);
        --color-secondary-content: color(display-p3 .964052 .897855 .939789);
        --color-accent: color(display-p3 .312493 .813034 .735662);
        --color-accent-content: color(display-p3 .128725 .296875 .284306);
        --color-neutral: color(display-p3 .0346186 .034606 .0427327);
        --color-neutral-content: color(display-p3 .894477 .894477 .905114);
        --color-info: color(display-p3 .297526 .717371 .972161);
        --color-info-content: color(display-p3 .0695709 .177759 .278667);
        --color-success: color(display-p3 .32762 .813141 .585553);
        --color-success-content: color(display-p3 .108674 .294366 .226358);
        --color-warning: color(display-p3 .94863 .728271 .0946339);
        --color-warning-content: color(display-p3 .441203 .212026 .0773632);
        --color-error: color(display-p3 .940178 .428237 .500757);
        --color-error-content: color(display-p3 .274274 .0392692 .0981547);
      }
    }

    @supports (color: lab(0% 0 0)) {
      :root {
        --color-base-100: lab(13.3466% -1.27321 -5.67451);
        --color-base-200: lab(10.9483% -1.0722 -4.98787);
        --color-base-300: lab(8.50319% -.863373 -4.30144);
        --color-base-content: lab(97.3754% -1.86673 -10.6283);
        --color-primary: lab(47.6934% 38.5675 -81.9644);
        --color-primary-content: lab(95.2498% .411481 -6.78517);
        --color-secondary: lab(56.234% 76.7852 -8.06803);
        --color-secondary-content: lab(92.6584% 9.01154 -3.15071);
        --color-accent: lab(75.1988% -53.3697 -2.27785);
        --color-accent-content: lab(28.81% -21.4781 -3.59725);
        --color-neutral: lab(2.45787% .239417 -.873864);
        --color-neutral-content: lab(90.6853% .399202 -1.45452);
        --color-info: lab(69.9876% -23.5256 -45.9352);
        --color-info-content: lab(17.4794% -5.25945 -21.1512);
        --color-success: lab(74.4967% -60.7579 19.4189);
        --color-success-content: lab(27.9355% -26.9592 5.46191);
        --color-warning: lab(79.2305% 16.6936 100.392);
        --color-warning-content: lab(30.7627% 30.2938 40.2828);
        --color-error: lab(64.1803% 63.0275 19.2122);
        --color-error-content: lab(14.1162% 34.0067 9.81536);
      }
    }
  }

  [data-theme="light"] {
    --lightningcss-light: initial;
    --lightningcss-dark: ;
    color-scheme: light;
    --color-base-100: #fff;
    --color-base-200: #f8f8f8;
    --color-base-300: #eee;
    --color-base-content: #18181b;
    --color-primary: #422ad5;
    --color-primary-content: #e0e7ff;
    --color-secondary: #f43098;
    --color-secondary-content: #f9e4f0;
    --color-accent: #00d1bb;
    --color-accent-content: #084d49;
    --color-neutral: #09090b;
    --color-neutral-content: #e4e4e7;
    --color-info: #00bafc;
    --color-info-content: #042e49;
    --color-success: #00d193;
    --color-success-content: #004c39;
    --color-warning: #f9b800;
    --color-warning-content: #793205;
    --color-error: #ff657f;
    --color-error-content: #4d0218;
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }

  @supports (color: color(display-p3 0 0 0)) {
    [data-theme="light"] {
      --color-base-100: color(display-p3 1 1 1);
      --color-base-200: color(display-p3 .973691 .973691 .973691);
      --color-base-300: color(display-p3 .93448 .93448 .93448);
      --color-base-content: color(display-p3 .0937957 .093793 .104806);
      --color-primary: color(display-p3 .244907 .16847 .802628);
      --color-primary-content: color(display-p3 .883035 .90499 .993138);
      --color-secondary: color(display-p3 .880667 .26782 .587861);
      --color-secondary-content: color(display-p3 .964052 .897855 .939789);
      --color-accent: color(display-p3 .312493 .813034 .735662);
      --color-accent-content: color(display-p3 .128725 .296875 .284306);
      --color-neutral: color(display-p3 .0346186 .034606 .0427327);
      --color-neutral-content: color(display-p3 .894477 .894477 .905114);
      --color-info: color(display-p3 .297526 .717371 .972161);
      --color-info-content: color(display-p3 .0695709 .177759 .278667);
      --color-success: color(display-p3 .32762 .813141 .585553);
      --color-success-content: color(display-p3 .108674 .294366 .226358);
      --color-warning: color(display-p3 .94863 .728271 .0946339);
      --color-warning-content: color(display-p3 .441203 .212026 .0773632);
      --color-error: color(display-p3 .940178 .428237 .500757);
      --color-error-content: color(display-p3 .274274 .0392692 .0981547);
    }
  }

  @supports (color: lab(0% 0 0)) {
    [data-theme="light"] {
      --color-base-100: lab(100% 0 0);
      --color-base-200: lab(97.68% -.0000298023 .0000119209);
      --color-base-300: lab(94.2% 0 0);
      --color-base-content: lab(8.30603% .618212 -2.16573);
      --color-primary: lab(31.573% 49.867 -84.7065);
      --color-primary-content: lab(91.6577% 1.04591 -12.7199);
      --color-secondary: lab(56.234% 76.7852 -8.06803);
      --color-secondary-content: lab(92.6584% 9.01154 -3.15071);
      --color-accent: lab(75.1988% -53.3697 -2.27785);
      --color-accent-content: lab(28.81% -21.4781 -3.59725);
      --color-neutral: lab(2.45787% .239417 -.873864);
      --color-neutral-content: lab(90.6853% .399202 -1.45452);
      --color-info: lab(69.9876% -23.5256 -45.9352);
      --color-info-content: lab(17.4794% -5.25945 -21.1512);
      --color-success: lab(74.4967% -60.7579 19.4189);
      --color-success-content: lab(27.9355% -26.9592 5.46191);
      --color-warning: lab(79.2305% 16.6936 100.392);
      --color-warning-content: lab(30.7627% 30.2938 40.2828);
      --color-error: lab(64.1803% 63.0275 19.2122);
      --color-error-content: lab(14.1162% 34.0067 9.81536);
    }
  }

  :root:has(input.theme-controller[value="light"]:checked) {
    --lightningcss-light: initial;
    --lightningcss-dark: ;
    color-scheme: light;
    --color-base-100: #fff;
    --color-base-200: #f8f8f8;
    --color-base-300: #eee;
    --color-base-content: #18181b;
    --color-primary: #422ad5;
    --color-primary-content: #e0e7ff;
    --color-secondary: #f43098;
    --color-secondary-content: #f9e4f0;
    --color-accent: #00d1bb;
    --color-accent-content: #084d49;
    --color-neutral: #09090b;
    --color-neutral-content: #e4e4e7;
    --color-info: #00bafc;
    --color-info-content: #042e49;
    --color-success: #00d193;
    --color-success-content: #004c39;
    --color-warning: #f9b800;
    --color-warning-content: #793205;
    --color-error: #ff657f;
    --color-error-content: #4d0218;
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }

  @supports (color: color(display-p3 0 0 0)) {
    :root:has(input.theme-controller[value="light"]:checked) {
      --color-base-100: color(display-p3 1 1 1);
      --color-base-200: color(display-p3 .973691 .973691 .973691);
      --color-base-300: color(display-p3 .93448 .93448 .93448);
      --color-base-content: color(display-p3 .0937957 .093793 .104806);
      --color-primary: color(display-p3 .244907 .16847 .802628);
      --color-primary-content: color(display-p3 .883035 .90499 .993138);
      --color-secondary: color(display-p3 .880667 .26782 .587861);
      --color-secondary-content: color(display-p3 .964052 .897855 .939789);
      --color-accent: color(display-p3 .312493 .813034 .735662);
      --color-accent-content: color(display-p3 .128725 .296875 .284306);
      --color-neutral: color(display-p3 .0346186 .034606 .0427327);
      --color-neutral-content: color(display-p3 .894477 .894477 .905114);
      --color-info: color(display-p3 .297526 .717371 .972161);
      --color-info-content: color(display-p3 .0695709 .177759 .278667);
      --color-success: color(display-p3 .32762 .813141 .585553);
      --color-success-content: color(display-p3 .108674 .294366 .226358);
      --color-warning: color(display-p3 .94863 .728271 .0946339);
      --color-warning-content: color(display-p3 .441203 .212026 .0773632);
      --color-error: color(display-p3 .940178 .428237 .500757);
      --color-error-content: color(display-p3 .274274 .0392692 .0981547);
    }
  }

  @supports (color: lab(0% 0 0)) {
    :root:has(input.theme-controller[value="light"]:checked) {
      --color-base-100: lab(100% 0 0);
      --color-base-200: lab(97.68% -.0000298023 .0000119209);
      --color-base-300: lab(94.2% 0 0);
      --color-base-content: lab(8.30603% .618212 -2.16573);
      --color-primary: lab(31.573% 49.867 -84.7065);
      --color-primary-content: lab(91.6577% 1.04591 -12.7199);
      --color-secondary: lab(56.234% 76.7852 -8.06803);
      --color-secondary-content: lab(92.6584% 9.01154 -3.15071);
      --color-accent: lab(75.1988% -53.3697 -2.27785);
      --color-accent-content: lab(28.81% -21.4781 -3.59725);
      --color-neutral: lab(2.45787% .239417 -.873864);
      --color-neutral-content: lab(90.6853% .399202 -1.45452);
      --color-info: lab(69.9876% -23.5256 -45.9352);
      --color-info-content: lab(17.4794% -5.25945 -21.1512);
      --color-success: lab(74.4967% -60.7579 19.4189);
      --color-success-content: lab(27.9355% -26.9592 5.46191);
      --color-warning: lab(79.2305% 16.6936 100.392);
      --color-warning-content: lab(30.7627% 30.2938 40.2828);
      --color-error: lab(64.1803% 63.0275 19.2122);
      --color-error-content: lab(14.1162% 34.0067 9.81536);
    }
  }

  [data-theme="dark"] {
    --lightningcss-light: ;
    --lightningcss-dark: initial;
    color-scheme: dark;
    --color-base-100: #1d232a;
    --color-base-200: #191e24;
    --color-base-300: #15191e;
    --color-base-content: #f2f8ff;
    --color-primary: #605dff;
    --color-primary-content: #edf1fe;
    --color-secondary: #f43098;
    --color-secondary-content: #f9e4f0;
    --color-accent: #00d1bb;
    --color-accent-content: #084d49;
    --color-neutral: #09090b;
    --color-neutral-content: #e4e4e7;
    --color-info: #00bafc;
    --color-info-content: #042e49;
    --color-success: #00d193;
    --color-success-content: #004c39;
    --color-warning: #f9b800;
    --color-warning-content: #793205;
    --color-error: #ff657f;
    --color-error-content: #4d0218;
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }

  @supports (color: color(display-p3 0 0 0)) {
    [data-theme="dark"] {
      --color-base-100: color(display-p3 .118154 .136578 .162345);
      --color-base-200: color(display-p3 .101571 .117056 .139288);
      --color-base-300: color(display-p3 .084995 .0975948 .116397);
      --color-base-content: color(display-p3 .933919 .975165 1.04359);
      --color-primary: color(display-p3 .375125 .365608 .964847);
      --color-primary-content: color(display-p3 .933611 .94601 .992985);
      --color-secondary: color(display-p3 .880667 .26782 .587861);
      --color-secondary-content: color(display-p3 .964052 .897855 .939789);
      --color-accent: color(display-p3 .312493 .813034 .735662);
      --color-accent-content: color(display-p3 .128725 .296875 .284306);
      --color-neutral: color(display-p3 .0346186 .034606 .0427327);
      --color-neutral-content: color(display-p3 .894477 .894477 .905114);
      --color-info: color(display-p3 .297526 .717371 .972161);
      --color-info-content: color(display-p3 .0695709 .177759 .278667);
      --color-success: color(display-p3 .32762 .813141 .585553);
      --color-success-content: color(display-p3 .108674 .294366 .226358);
      --color-warning: color(display-p3 .94863 .728271 .0946339);
      --color-warning-content: color(display-p3 .441203 .212026 .0773632);
      --color-error: color(display-p3 .940178 .428237 .500757);
      --color-error-content: color(display-p3 .274274 .0392692 .0981547);
    }
  }

  @supports (color: lab(0% 0 0)) {
    [data-theme="dark"] {
      --color-base-100: lab(13.3466% -1.27321 -5.67451);
      --color-base-200: lab(10.9483% -1.0722 -4.98787);
      --color-base-300: lab(8.50319% -.863373 -4.30144);
      --color-base-content: lab(97.3754% -1.86673 -10.6283);
      --color-primary: lab(47.6934% 38.5675 -81.9644);
      --color-primary-content: lab(95.2498% .411481 -6.78517);
      --color-secondary: lab(56.234% 76.7852 -8.06803);
      --color-secondary-content: lab(92.6584% 9.01154 -3.15071);
      --color-accent: lab(75.1988% -53.3697 -2.27785);
      --color-accent-content: lab(28.81% -21.4781 -3.59725);
      --color-neutral: lab(2.45787% .239417 -.873864);
      --color-neutral-content: lab(90.6853% .399202 -1.45452);
      --color-info: lab(69.9876% -23.5256 -45.9352);
      --color-info-content: lab(17.4794% -5.25945 -21.1512);
      --color-success: lab(74.4967% -60.7579 19.4189);
      --color-success-content: lab(27.9355% -26.9592 5.46191);
      --color-warning: lab(79.2305% 16.6936 100.392);
      --color-warning-content: lab(30.7627% 30.2938 40.2828);
      --color-error: lab(64.1803% 63.0275 19.2122);
      --color-error-content: lab(14.1162% 34.0067 9.81536);
    }
  }

  :root:has(input.theme-controller[value="dark"]:checked) {
    --lightningcss-light: ;
    --lightningcss-dark: initial;
    color-scheme: dark;
    --color-base-100: #1d232a;
    --color-base-200: #191e24;
    --color-base-300: #15191e;
    --color-base-content: #f2f8ff;
    --color-primary: #605dff;
    --color-primary-content: #edf1fe;
    --color-secondary: #f43098;
    --color-secondary-content: #f9e4f0;
    --color-accent: #00d1bb;
    --color-accent-content: #084d49;
    --color-neutral: #09090b;
    --color-neutral-content: #e4e4e7;
    --color-info: #00bafc;
    --color-info-content: #042e49;
    --color-success: #00d193;
    --color-success-content: #004c39;
    --color-warning: #f9b800;
    --color-warning-content: #793205;
    --color-error: #ff657f;
    --color-error-content: #4d0218;
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }

  @supports (color: color(display-p3 0 0 0)) {
    :root:has(input.theme-controller[value="dark"]:checked) {
      --color-base-100: color(display-p3 .118154 .136578 .162345);
      --color-base-200: color(display-p3 .101571 .117056 .139288);
      --color-base-300: color(display-p3 .084995 .0975948 .116397);
      --color-base-content: color(display-p3 .933919 .975165 1.04359);
      --color-primary: color(display-p3 .375125 .365608 .964847);
      --color-primary-content: color(display-p3 .933611 .94601 .992985);
      --color-secondary: color(display-p3 .880667 .26782 .587861);
      --color-secondary-content: color(display-p3 .964052 .897855 .939789);
      --color-accent: color(display-p3 .312493 .813034 .735662);
      --color-accent-content: color(display-p3 .128725 .296875 .284306);
      --color-neutral: color(display-p3 .0346186 .034606 .0427327);
      --color-neutral-content: color(display-p3 .894477 .894477 .905114);
      --color-info: color(display-p3 .297526 .717371 .972161);
      --color-info-content: color(display-p3 .0695709 .177759 .278667);
      --color-success: color(display-p3 .32762 .813141 .585553);
      --color-success-content: color(display-p3 .108674 .294366 .226358);
      --color-warning: color(display-p3 .94863 .728271 .0946339);
      --color-warning-content: color(display-p3 .441203 .212026 .0773632);
      --color-error: color(display-p3 .940178 .428237 .500757);
      --color-error-content: color(display-p3 .274274 .0392692 .0981547);
    }
  }

  @supports (color: lab(0% 0 0)) {
    :root:has(input.theme-controller[value="dark"]:checked) {
      --color-base-100: lab(13.3466% -1.27321 -5.67451);
      --color-base-200: lab(10.9483% -1.0722 -4.98787);
      --color-base-300: lab(8.50319% -.863373 -4.30144);
      --color-base-content: lab(97.3754% -1.86673 -10.6283);
      --color-primary: lab(47.6934% 38.5675 -81.9644);
      --color-primary-content: lab(95.2498% .411481 -6.78517);
      --color-secondary: lab(56.234% 76.7852 -8.06803);
      --color-secondary-content: lab(92.6584% 9.01154 -3.15071);
      --color-accent: lab(75.1988% -53.3697 -2.27785);
      --color-accent-content: lab(28.81% -21.4781 -3.59725);
      --color-neutral: lab(2.45787% .239417 -.873864);
      --color-neutral-content: lab(90.6853% .399202 -1.45452);
      --color-info: lab(69.9876% -23.5256 -45.9352);
      --color-info-content: lab(17.4794% -5.25945 -21.1512);
      --color-success: lab(74.4967% -60.7579 19.4189);
      --color-success-content: lab(27.9355% -26.9592 5.46191);
      --color-warning: lab(79.2305% 16.6936 100.392);
      --color-warning-content: lab(30.7627% 30.2938 40.2828);
      --color-error: lab(64.1803% 63.0275 19.2122);
      --color-error-content: lab(14.1162% 34.0067 9.81536);
    }
  }

  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }

  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }

  @property --radialprogress {
    syntax: "<percentage>"; inherits: true; initial-value: 0%;
  }

  :where(:root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked)) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: var(--color-base-100);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :where(:root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked)) {
      --root-bg: color-mix(in srgb, var(--color-base-100), lab(0% 0 0) 40%);
    }
  }

  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(:-webkit-any(.modal-start, .modal-end)) {
    scrollbar-gutter: stable;
  }

  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(:-moz-any(.modal-start, .modal-end)) {
    scrollbar-gutter: stable;
  }

  :where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(:is(.modal-start, .modal-end)) {
    scrollbar-gutter: stable;
  }

  :root {
    scrollbar-color: currentColor rgba(0, 0, 0, 0);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root {
      scrollbar-color: color-mix(in oklch, currentColor 35%, rgba(0, 0, 0, 0)) rgba(0, 0, 0, 0);
    }
  }

  :root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked) {
    overflow: hidden;
  }
}

@layer components;

@layer utilities {
  .menu {
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    flex-flow: column wrap;
    width: -moz-fit-content;
    width: fit-content;
    padding: .5rem;
    font-size: .875rem;
    display: flex;
  }

  .menu :where(li ul) {
    white-space: nowrap;
    position: relative;
  }

  .menu :where(li ul):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: 1rem;
    padding-left: .5rem;
  }

  .menu :where(li ul):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: 1rem;
    padding-left: .5rem;
  }

  .menu :where(li ul):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: 1rem;
    padding-left: .5rem;
  }

  .menu :where(li ul):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: 1rem;
    padding-right: .5rem;
  }

  .menu :where(li ul):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: 1rem;
    padding-right: .5rem;
  }

  .menu :where(li ul):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: 1rem;
    padding-right: .5rem;
  }

  .menu :where(li ul):before {
    background-color: var(--color-base-content);
    opacity: .1;
    width: var(--border);
    content: "";
    position: absolute;
    top: .75rem;
    bottom: .75rem;
  }

  .menu :where(li ul):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))):before {
    left: 0;
  }

  .menu :where(li ul):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))):before {
    left: 0;
  }

  .menu :where(li ul):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))):before {
    left: 0;
  }

  .menu :where(li ul):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)):before {
    right: 0;
  }

  .menu :where(li ul):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)):before {
    right: 0;
  }

  .menu :where(li ul):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)):before {
    right: 0;
  }

  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
  }

  .menu :where(li:not(.menu-title) > :not(:-webkit-any(ul, details, .menu-title, .btn))) {
    border-radius: var(--radius-field);
    text-align: start;
    text-wrap: balance;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    padding-top: .375rem;
    padding-bottom: .375rem;
    padding-left: .75rem;
    padding-right: .75rem;
    transition-property: color, background-color, box-shadow;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    display: grid;
  }

  .menu :where(li:not(.menu-title) > :not(:-moz-any(ul, details, .menu-title, .btn))) {
    border-radius: var(--radius-field);
    text-align: start;
    text-wrap: balance;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    padding-top: .375rem;
    padding-bottom: .375rem;
    padding-left: .75rem;
    padding-right: .75rem;
    transition-property: color, background-color, box-shadow;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    display: grid;
  }

  .menu :where(li:not(.menu-title) > :not(:is(ul, details, .menu-title, .btn))) {
    border-radius: var(--radius-field);
    text-align: start;
    text-wrap: balance;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    padding-top: .375rem;
    padding-bottom: .375rem;
    padding-left: .75rem;
    padding-right: .75rem;
    transition-property: color, background-color, box-shadow;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    display: grid;
  }

  .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--radius-field);
    text-align: start;
    text-wrap: balance;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    padding-top: .375rem;
    padding-bottom: .375rem;
    padding-left: .75rem;
    padding-right: .75rem;
    transition-property: color, background-color, box-shadow;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    display: grid;
  }

  .menu :where(li > details > summary) {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li > details > summary) {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
  }

  .menu :where(li > details > summary):after {
    content: "";
    transform-origin: 50%;
    pointer-events: none;
    justify-self: flex-end;
    width: .375rem;
    height: .375rem;
    transition-property: rotate, translate;
    transition-duration: .2s;
    display: block;
    translate: 0 -1px;
    rotate: -135deg;
    box-shadow: inset 2px 2px;
  }

  .menu :where(li > .menu-dropdown-toggle):after {
    content: "";
    transform-origin: 50%;
    pointer-events: none;
    justify-self: flex-end;
    width: .375rem;
    height: .375rem;
    transition-property: rotate, translate;
    transition-duration: .2s;
    display: block;
    translate: 0 -1px;
    rotate: -135deg;
    box-shadow: inset 2px 2px;
  }

  .menu :where(li > details[open] > summary):after {
    translate: 0 1px;
    rotate: 45deg;
  }

  .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    translate: 0 1px;
    rotate: 45deg;
  }

  .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)), li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-webkit-any(.menu-active, :active, .btn)).menu-focus {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)), li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-webkit-any(.menu-active, :active, .btn)).menu-focus {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)), li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-webkit-any(.menu-active, :active, .btn)).menu-focus {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)), li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-webkit-any(.menu-active, :active, .btn)).menu-focus {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)), li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):focus-visible {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)), li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):focus-visible {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)), li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):focus-visible {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)), li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):focus-visible {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)), li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-moz-any(.menu-active, :active, .btn)).menu-focus {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)), li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-moz-any(.menu-active, :active, .btn)).menu-focus {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)), li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-moz-any(.menu-active, :active, .btn)).menu-focus {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)), li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-moz-any(.menu-active, :active, .btn)).menu-focus {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)), li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-moz-any(.menu-active, :active, .btn)):focus-visible {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)), li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-moz-any(.menu-active, :active, .btn)):focus-visible {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)), li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-moz-any(.menu-active, :active, .btn)):focus-visible {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)), li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:-moz-any(.menu-active, :active, .btn)):focus-visible {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)), li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:is(.menu-active, :active, .btn)).menu-focus {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)), li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:is(.menu-active, :active, .btn)).menu-focus {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)), li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:is(.menu-active, :active, .btn)).menu-focus {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)), li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:is(.menu-active, :active, .btn)).menu-focus {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)), li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:is(.menu-active, :active, .btn)):focus-visible {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)), li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:is(.menu-active, :active, .btn)):focus-visible {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)), li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:is(.menu-active, :active, .btn)):focus-visible {
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)), li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title)):not(:is(.menu-active, :active, .btn)):focus-visible {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):hover, li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-webkit-any(.menu-active, :active, .btn)):hover) {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):hover, li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-webkit-any(.menu-active, :active, .btn)):hover) {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):hover, li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-webkit-any(.menu-active, :active, .btn)):hover) {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):hover, li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-webkit-any(.menu-active, :active, .btn)):hover) {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:-webkit-any(.menu-title, .disabled)) > :not(:-webkit-any(ul, details, .menu-title)):not(:-webkit-any(.menu-active, :active, .btn)):hover, li:not(:-webkit-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-webkit-any(.menu-active, :active, .btn)):hover) {
    box-shadow: inset 0 1px rgba(0, 0, 0, .01), inset 0 -1px rgba(255, 255, 255, .01);
    box-shadow: inset 0 1px color(display-p3 0 0 0 / .01), inset 0 -1px color(display-p3 1 1 1 / .01);
    box-shadow: inset 0 1px lab(0% 0 0 / .01), inset 0 -1px lab(100% 0 0 / .01);
  }

  .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)):not(:-moz-any(.menu-active, :active, .btn)):hover, li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-moz-any(.menu-active, :active, .btn)):hover) {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)):not(:-moz-any(.menu-active, :active, .btn)):hover, li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-moz-any(.menu-active, :active, .btn)):hover) {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)):not(:-moz-any(.menu-active, :active, .btn)):hover, li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-moz-any(.menu-active, :active, .btn)):hover) {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)):not(:-moz-any(.menu-active, :active, .btn)):hover, li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-moz-any(.menu-active, :active, .btn)):hover) {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:-moz-any(.menu-title, .disabled)) > :not(:-moz-any(ul, details, .menu-title)):not(:-moz-any(.menu-active, :active, .btn)):hover, li:not(:-moz-any(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:-moz-any(.menu-active, :active, .btn)):hover) {
    box-shadow: inset 0 1px rgba(0, 0, 0, .01), inset 0 -1px rgba(255, 255, 255, .01);
    box-shadow: inset 0 1px color(display-p3 0 0 0 / .01), inset 0 -1px color(display-p3 1 1 1 / .01);
    box-shadow: inset 0 1px lab(0% 0 0 / .01), inset 0 -1px lab(100% 0 0 / .01);
  }

  .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)):not(:is(.menu-active, :active, .btn)):hover, li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:is(.menu-active, :active, .btn)):hover) {
    cursor: pointer;
    background-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)):not(:is(.menu-active, :active, .btn)):hover, li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:is(.menu-active, :active, .btn)):hover) {
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
  }

  .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)):not(:is(.menu-active, :active, .btn)):hover, li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:is(.menu-active, :active, .btn)):hover) {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)):not(:is(.menu-active, :active, .btn)):hover, li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:is(.menu-active, :active, .btn)):hover) {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li:not(:is(.menu-title, .disabled)) > :not(:is(ul, details, .menu-title)):not(:is(.menu-active, :active, .btn)):hover, li:not(:is(.menu-title, .disabled)) > details > summary:not(.menu-title):not(:is(.menu-active, :active, .btn)):hover) {
    box-shadow: inset 0 1px rgba(0, 0, 0, .01), inset 0 -1px rgba(255, 255, 255, .01);
    box-shadow: inset 0 1px color(display-p3 0 0 0 / .01), inset 0 -1px color(display-p3 1 1 1 / .01);
    box-shadow: inset 0 1px lab(0% 0 0 / .01), inset 0 -1px lab(100% 0 0 / .01);
  }

  .menu :where(li:empty) {
    background-color: var(--color-base-content);
    opacity: .1;
    height: 1px;
    margin: .5rem 1rem;
  }

  .menu :where(li) {
    flex-flow: column wrap;
    flex-shrink: 0;
    align-items: stretch;
    display: flex;
    position: relative;
  }

  .menu :where(li) .badge {
    justify-self: flex-end;
  }

  .menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)):active {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)):active {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)):active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  .menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)):active:not(.menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)):active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)):active {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)):active {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)):active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  .menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)):active:not(.menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)):active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li) > :not(:is(ul, .menu-title, details, .btn)):active {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li) > :not(:is(ul, .menu-title, details, .btn)):active {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li) > :not(:is(ul, .menu-title, details, .btn)):active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  .menu :where(li) > :not(:is(ul, .menu-title, details, .btn)):active:not(.menu :where(li) > :not(:is(ul, .menu-title, details, .btn)):active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)).menu-active {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)).menu-active {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)).menu-active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  .menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)).menu-active:not(.menu :where(li) > :not(:-webkit-any(ul, .menu-title, details, .btn)).menu-active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)).menu-active {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)).menu-active {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)).menu-active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  .menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)).menu-active:not(.menu :where(li) > :not(:-moz-any(ul, .menu-title, details, .btn)).menu-active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li) > :not(:is(ul, .menu-title, details, .btn)).menu-active {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li) > :not(:is(ul, .menu-title, details, .btn)).menu-active {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li) > :not(:is(ul, .menu-title, details, .btn)).menu-active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  .menu :where(li) > :not(:is(ul, .menu-title, details, .btn)).menu-active:not(.menu :where(li) > :not(:is(ul, .menu-title, details, .btn)).menu-active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li) > details > summary:active {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li) > details > summary:active {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .menu :where(li) > details > summary:active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li).menu-disabled {
    pointer-events: none;
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .menu :where(li).menu-disabled {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }

  .menu .dropdown:focus-within .menu-dropdown-toggle:after {
    translate: 0 1px;
    rotate: 45deg;
  }

  .menu .dropdown-content {
    margin-top: .5rem;
    padding: .5rem;
  }

  .menu .dropdown-content:before {
    display: none;
  }

  .list {
    flex-direction: column;
    font-size: .875rem;
    display: flex;
  }

  .list :where(.list-row) {
    --list-grid-cols: minmax(0, auto) 1fr;
    border-radius: var(--radius-box);
    word-break: break-word;
    grid-auto-flow: column;
    grid-template-columns: var(--list-grid-cols);
    gap: 1rem;
    padding: 1rem;
    display: grid;
    position: relative;
  }

  .list :where(.list-row):has(.list-col-grow:first-child) {
    --list-grid-cols: 1fr;
  }

  .list :where(.list-row):has(.list-col-grow:nth-child(2)) {
    --list-grid-cols: minmax(0, auto) 1fr;
  }

  .list :where(.list-row):has(.list-col-grow:nth-child(3)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
  }

  .list :where(.list-row):has(.list-col-grow:nth-child(4)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }

  .list :where(.list-row):has(.list-col-grow:nth-child(5)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }

  .list :where(.list-row):has(.list-col-grow:nth-child(6)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }

  .list :where(.list-row) :not(.list-col-wrap) {
    grid-row-start: 1;
  }

  .list > :not(:last-child).list-row:after {
    content: "";
    border-bottom: var(--border) solid;
    inset-inline: var(--radius-box);
    border-color: var(--color-base-content);
    position: absolute;
    bottom: 0;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .list > :not(:last-child).list-row:after {
      border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
    }
  }

  .list > :not(:last-child) .list-row:after {
    content: "";
    border-bottom: var(--border) solid;
    inset-inline: var(--radius-box);
    border-color: var(--color-base-content);
    position: absolute;
    bottom: 0;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .list > :not(:last-child) .list-row:after {
      border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
    }
  }

  .toast {
    translate: var(--toast-x, 0) var(--toast-y, 0);
    background-color: rgba(0, 0, 0, 0);
    flex-direction: column;
    gap: .5rem;
    width: max-content;
    max-width: calc(100vw - 2rem);
    display: flex;
    position: fixed;
    top: auto;
    bottom: 1rem;
  }

  .toast:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: auto;
    right: 1rem;
  }

  .toast:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: auto;
    right: 1rem;
  }

  .toast:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: auto;
    right: 1rem;
  }

  .toast:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: 1rem;
    right: auto;
  }

  .toast:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: 1rem;
    right: auto;
  }

  .toast:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: 1rem;
    right: auto;
  }

  .toast > * {
    animation: .25s ease-out toast;
  }

  .toast:where(.toast-start) {
    --toast-x: 0;
  }

  .toast:where(.toast-start):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: 1rem;
    right: auto;
  }

  .toast:where(.toast-start):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: 1rem;
    right: auto;
  }

  .toast:where(.toast-start):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: 1rem;
    right: auto;
  }

  .toast:where(.toast-start):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: auto;
    right: 1rem;
  }

  .toast:where(.toast-start):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: auto;
    right: 1rem;
  }

  .toast:where(.toast-start):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: auto;
    right: 1rem;
  }

  .toast:where(.toast-center) {
    --toast-x: -50%;
    left: 50%;
    right: 50%;
  }

  .toast:where(.toast-end) {
    --toast-x: 0;
  }

  .toast:where(.toast-end):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: auto;
    right: 1rem;
  }

  .toast:where(.toast-end):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: auto;
    right: 1rem;
  }

  .toast:where(.toast-end):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    left: auto;
    right: 1rem;
  }

  .toast:where(.toast-end):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: 1rem;
    right: auto;
  }

  .toast:where(.toast-end):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: 1rem;
    right: auto;
  }

  .toast:where(.toast-end):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    left: 1rem;
    right: auto;
  }

  .toast:where(.toast-bottom) {
    --toast-y: 0;
    top: auto;
    bottom: 1rem;
  }

  .toast:where(.toast-middle) {
    --toast-y: -50%;
    top: 50%;
    bottom: auto;
  }

  .toast:where(.toast-top) {
    --toast-y: 0;
    top: 1rem;
    bottom: auto;
  }

  .table {
    border-radius: var(--radius-box);
    text-align: left;
    width: 100%;
    font-size: .875rem;
    position: relative;
  }

  .table:where(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)), [dir="rtl"], [dir="rtl"] *) {
    text-align: right;
  }

  .table:where(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)), [dir="rtl"], [dir="rtl"] *) {
    text-align: right;
  }

  .table:where(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)), [dir="rtl"], [dir="rtl"] *) {
    text-align: right;
  }

  @media (hover: hover) {
    .table tr.row-hover:hover {
      background-color: var(--color-base-200);
    }
  }

  @media (hover: hover) {
    .table tr.row-hover:nth-child(2n):hover {
      background-color: var(--color-base-200);
    }
  }

  .table :where(th, td) {
    vertical-align: middle;
    padding-top: .75rem;
    padding-bottom: .75rem;
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .table :where(thead, tfoot) {
    white-space: nowrap;
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .table :where(thead, tfoot) {
      color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    }
  }

  .table :where(thead, tfoot) {
    font-size: .875rem;
    font-weight: 600;
  }

  .table :where(tfoot) {
    border-top: var(--border) solid var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .table :where(tfoot) {
      border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, rgba(0, 0, 0, 0));
    }
  }

  .table :where(.table-pin-rows thead tr) {
    z-index: 1;
    background-color: var(--color-base-100);
    position: -webkit-sticky;
    position: sticky;
    top: 0;
  }

  .table :where(.table-pin-rows tfoot tr) {
    z-index: 1;
    background-color: var(--color-base-100);
    position: -webkit-sticky;
    position: sticky;
    bottom: 0;
  }

  .table :where(.table-pin-cols tr th) {
    background-color: var(--color-base-100);
    position: -webkit-sticky;
    position: sticky;
    left: 0;
    right: 0;
  }

  .table :where(thead tr, tbody tr:not(:last-child)) {
    border-bottom: var(--border) solid var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .table :where(thead tr, tbody tr:not(:last-child)) {
      border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, rgba(0, 0, 0, 0));
    }
  }

  .steps {
    counter-reset: step;
    grid-auto-columns: 1fr;
    grid-auto-flow: column;
    display: inline-grid;
    overflow-x: auto;
    overflow-y: hidden;
  }

  .steps .step {
    text-align: center;
    --step-bg: var(--color-base-300);
    --step-fg: var(--color-base-content);
    grid-template-rows: 40px 1fr;
    grid-template-columns: auto;
    place-items: center;
    min-width: 4rem;
    display: grid;
  }

  .steps .step:before {
    width: 100%;
    height: .5rem;
    color: var(--step-bg);
    background-color: var(--step-bg);
    --tw-content: "";
    content: var(--tw-content);
    border: 1px solid;
    grid-row-start: 1;
    grid-column-start: 1;
    top: 0;
  }

  .steps .step:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))):before {
    margin-left: -100%;
  }

  .steps .step:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))):before {
    margin-left: -100%;
  }

  .steps .step:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))):before {
    margin-left: -100%;
  }

  .steps .step:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)):before {
    margin-right: -100%;
  }

  .steps .step:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)):before {
    margin-right: -100%;
  }

  .steps .step:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)):before {
    margin-right: -100%;
  }

  .steps .step > .step-icon {
    content: counter(step);
    counter-increment: step;
    z-index: 1;
    color: var(--step-fg);
    background-color: var(--step-bg);
    border: 1px solid var(--step-bg);
    border-radius: 3.40282e38px;
    grid-row-start: 1;
    grid-column-start: 1;
    place-self: center;
    place-items: center;
    width: 2rem;
    height: 2rem;
    display: grid;
    position: relative;
  }

  .steps .step:not(:has(.step-icon)):after {
    content: counter(step);
    counter-increment: step;
    z-index: 1;
    color: var(--step-fg);
    background-color: var(--step-bg);
    border: 1px solid var(--step-bg);
    border-radius: 3.40282e38px;
    grid-row-start: 1;
    grid-column-start: 1;
    place-self: center;
    place-items: center;
    width: 2rem;
    height: 2rem;
    display: grid;
    position: relative;
  }

  .steps .step:first-child:before {
    content: none;
  }

  .steps .step[data-content]:after {
    content: attr(data-content);
  }

  .steps .step-neutral + .step-neutral:before {
    --step-bg: var(--color-neutral);
    --step-fg: var(--color-neutral-content);
  }

  .steps .step-neutral:after {
    --step-bg: var(--color-neutral);
    --step-fg: var(--color-neutral-content);
  }

  .steps .step-neutral > .step-icon {
    --step-bg: var(--color-neutral);
    --step-fg: var(--color-neutral-content);
  }

  .steps .step-primary + .step-primary:before {
    --step-bg: var(--color-primary);
    --step-fg: var(--color-primary-content);
  }

  .steps .step-primary:after {
    --step-bg: var(--color-primary);
    --step-fg: var(--color-primary-content);
  }

  .steps .step-primary > .step-icon {
    --step-bg: var(--color-primary);
    --step-fg: var(--color-primary-content);
  }

  .steps .step-secondary + .step-secondary:before {
    --step-bg: var(--color-secondary);
    --step-fg: var(--color-secondary-content);
  }

  .steps .step-secondary:after {
    --step-bg: var(--color-secondary);
    --step-fg: var(--color-secondary-content);
  }

  .steps .step-secondary > .step-icon {
    --step-bg: var(--color-secondary);
    --step-fg: var(--color-secondary-content);
  }

  .steps .step-accent + .step-accent:before {
    --step-bg: var(--color-accent);
    --step-fg: var(--color-accent-content);
  }

  .steps .step-accent:after {
    --step-bg: var(--color-accent);
    --step-fg: var(--color-accent-content);
  }

  .steps .step-accent > .step-icon {
    --step-bg: var(--color-accent);
    --step-fg: var(--color-accent-content);
  }

  .steps .step-info + .step-info:before {
    --step-bg: var(--color-info);
    --step-fg: var(--color-info-content);
  }

  .steps .step-info:after {
    --step-bg: var(--color-info);
    --step-fg: var(--color-info-content);
  }

  .steps .step-info > .step-icon {
    --step-bg: var(--color-info);
    --step-fg: var(--color-info-content);
  }

  .steps .step-success + .step-success:before {
    --step-bg: var(--color-success);
    --step-fg: var(--color-success-content);
  }

  .steps .step-success:after {
    --step-bg: var(--color-success);
    --step-fg: var(--color-success-content);
  }

  .steps .step-success > .step-icon {
    --step-bg: var(--color-success);
    --step-fg: var(--color-success-content);
  }

  .steps .step-warning + .step-warning:before {
    --step-bg: var(--color-warning);
    --step-fg: var(--color-warning-content);
  }

  .steps .step-warning:after {
    --step-bg: var(--color-warning);
    --step-fg: var(--color-warning-content);
  }

  .steps .step-warning > .step-icon {
    --step-bg: var(--color-warning);
    --step-fg: var(--color-warning-content);
  }

  .steps .step-error + .step-error:before {
    --step-bg: var(--color-error);
    --step-fg: var(--color-error-content);
  }

  .steps .step-error:after {
    --step-bg: var(--color-error);
    --step-fg: var(--color-error-content);
  }

  .steps .step-error > .step-icon {
    --step-bg: var(--color-error);
    --step-fg: var(--color-error-content);
  }

  .select {
    border: var(--border) solid rgba(0, 0, 0, 0);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-color: var(--color-base-100);
    vertical-align: middle;
    width: max(3rem, min(20rem, 100%));
    height: var(--size);
    touch-action: manipulation;
    text-overflow: ellipsis;
    box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * .1)) inset;
    background-image: linear-gradient(45deg, rgba(0, 0, 0, 0) 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, rgba(0, 0, 0, 0) 50%);
    background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
    background-repeat: no-repeat;
    background-size: 4px 4px, 4px 4px;
    flex-shrink: 1;
    align-items: center;
    gap: .375rem;
    font-size: .875rem;
    display: inline-flex;
    position: relative;
  }

  .select:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-top-left-radius: var(--join-ss, var(--radius-field));
    border-top-right-radius: var(--join-se, var(--radius-field));
    border-bottom-right-radius: var(--join-ee, var(--radius-field));
    border-bottom-left-radius: var(--join-es, var(--radius-field));
    padding-left: 1rem;
    padding-right: 1.75rem;
  }

  .select:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-top-left-radius: var(--join-ss, var(--radius-field));
    border-top-right-radius: var(--join-se, var(--radius-field));
    border-bottom-right-radius: var(--join-ee, var(--radius-field));
    border-bottom-left-radius: var(--join-es, var(--radius-field));
    padding-left: 1rem;
    padding-right: 1.75rem;
  }

  .select:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-top-left-radius: var(--join-ss, var(--radius-field));
    border-top-right-radius: var(--join-se, var(--radius-field));
    border-bottom-right-radius: var(--join-ee, var(--radius-field));
    border-bottom-left-radius: var(--join-es, var(--radius-field));
    padding-left: 1rem;
    padding-right: 1.75rem;
  }

  .select:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-top-right-radius: var(--join-ss, var(--radius-field));
    border-top-left-radius: var(--join-se, var(--radius-field));
    border-bottom-left-radius: var(--join-ee, var(--radius-field));
    border-bottom-right-radius: var(--join-es, var(--radius-field));
    padding-left: 1.75rem;
    padding-right: 1rem;
  }

  .select:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-top-right-radius: var(--join-ss, var(--radius-field));
    border-top-left-radius: var(--join-se, var(--radius-field));
    border-bottom-left-radius: var(--join-ee, var(--radius-field));
    border-bottom-right-radius: var(--join-es, var(--radius-field));
    padding-left: 1.75rem;
    padding-right: 1rem;
  }

  .select:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-top-right-radius: var(--join-ss, var(--radius-field));
    border-top-left-radius: var(--join-se, var(--radius-field));
    border-bottom-left-radius: var(--join-ee, var(--radius-field));
    border-bottom-right-radius: var(--join-es, var(--radius-field));
    padding-left: 1.75rem;
    padding-right: 1rem;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), rgba(0, 0, 0, 0)) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * .1)) inset;
    }
  }

  .select {
    border-color: var(--input-color);
    --input-color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select {
      --input-color: color-mix(in oklab, var(--color-base-content) 20%, rgba(0, 0, 0, 0));
    }
  }

  .select {
    --size: calc(var(--size-field, .25rem) * 10);
  }

  [dir="rtl"] .select {
    background-position: 12px calc(1px + 50%), 16px calc(1px + 50%);
  }

  .select select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background: inherit;
    border-radius: inherit;
    border-style: none;
    width: calc(100% + 2.75rem);
    height: calc(100% - 2px);
  }

  .select select:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: -1rem;
    margin-right: -1.75rem;
    padding-left: 1rem;
    padding-right: 1.75rem;
  }

  .select select:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: -1rem;
    margin-right: -1.75rem;
    padding-left: 1rem;
    padding-right: 1.75rem;
  }

  .select select:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: -1rem;
    margin-right: -1.75rem;
    padding-left: 1rem;
    padding-right: 1.75rem;
  }

  .select select:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-left: -1.75rem;
    margin-right: -1rem;
    padding-left: 1.75rem;
    padding-right: 1rem;
  }

  .select select:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-left: -1.75rem;
    margin-right: -1rem;
    padding-left: 1.75rem;
    padding-right: 1rem;
  }

  .select select:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-left: -1.75rem;
    margin-right: -1rem;
    padding-left: 1.75rem;
    padding-right: 1rem;
  }

  .select select:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .select select:focus {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .select select:focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .select select:focus-within {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .select select:not(:last-child) {
    background-image: none;
  }

  .select select:not(:last-child):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-right: -1.375rem;
  }

  .select select:not(:last-child):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-right: -1.375rem;
  }

  .select select:not(:last-child):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-right: -1.375rem;
  }

  .select select:not(:last-child):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-left: -1.375rem;
  }

  .select select:not(:last-child):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-left: -1.375rem;
  }

  .select select:not(:last-child):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-left: -1.375rem;
  }

  .select:focus {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:focus {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), rgba(0, 0, 0, 0));
    }
  }

  .select:focus {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
    z-index: 1;
  }

  .select:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px var(--input-color);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:focus-within {
      box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), rgba(0, 0, 0, 0));
    }
  }

  .select:focus-within {
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
    z-index: 1;
  }

  .select:has( > select[disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:has( > select[disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }

  .select:has( > select[disabled])::placeholder {
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:has( > select[disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }

  .select:-webkit-any(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:-webkit-any(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }

  .select:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }

  .select:-moz-any(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:-moz-any(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }

  .select:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }

  .select:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:is(:disabled, [disabled]) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }

  .select:is(:disabled, [disabled])::placeholder {
    color: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .select:is(:disabled, [disabled])::placeholder {
      color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
    }
  }

  .select:has( > select[disabled]) > select[disabled] {
    cursor: not-allowed;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .avatar {
    vertical-align: middle;
    display: inline-flex;
    position: relative;
  }

  .avatar > div {
    aspect-ratio: 1;
    display: block;
    overflow: hidden;
  }

  .avatar img {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  .checkbox {
    border: var(--border) solid var(--input-color, var(--color-base-content));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .checkbox {
      border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, rgba(0, 0, 0, 0)));
    }
  }

  .checkbox {
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * .1)) inset, 0 0 rgba(0, 0, 0, 0) inset, 0 0 rgba(0, 0, 0, 0);
    --size: calc(var(--size-selector, .25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    flex-shrink: 0;
    padding: .25rem;
    transition: background-color .2s, box-shadow .2s;
    display: inline-block;
    position: relative;
  }

  .checkbox:before {
    --tw-content: "";
    content: var(--tw-content);
    opacity: 0;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
    width: 100%;
    height: 100%;
    box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * .1)) inset;
    background-color: currentColor;
    font-size: 1rem;
    line-height: .75;
    transition: clip-path .3s .1s, opacity .1s .1s, rotate .3s .1s, translate .3s .1s;
    display: block;
    rotate: 45deg;
  }

  .checkbox:focus-visible {
    outline: 2px solid var(--input-color, currentColor);
    outline-offset: 2px;
  }

  .checkbox:checked {
    background-color: var(--input-color, var(--color-base-content));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .checkbox:checked {
      background-color: var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, rgba(0, 0, 0, 0)));
    }
  }

  .checkbox:checked {
    box-shadow: 0 0 rgba(0, 0, 0, 0) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * .1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * .1));
  }

  .checkbox:checked:before {
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
    opacity: 1;
  }

  @media (forced-colors: active) {
    .checkbox:checked:before {
      --tw-content: "✔︎";
      clip-path: none;
      background-color: rgba(0, 0, 0, 0);
      rotate: none;
    }
  }

  @media print {
    .checkbox:checked:before {
      --tw-content: "✔︎";
      clip-path: none;
      background-color: rgba(0, 0, 0, 0);
      rotate: none;
    }
  }

  .checkbox[aria-checked="true"] {
    background-color: var(--input-color, var(--color-base-content));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .checkbox[aria-checked="true"] {
      background-color: var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, rgba(0, 0, 0, 0)));
    }
  }

  .checkbox[aria-checked="true"] {
    box-shadow: 0 0 rgba(0, 0, 0, 0) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * .1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * .1));
  }

  .checkbox[aria-checked="true"]:before {
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
    opacity: 1;
  }

  @media (forced-colors: active) {
    .checkbox[aria-checked="true"]:before {
      --tw-content: "✔︎";
      clip-path: none;
      background-color: rgba(0, 0, 0, 0);
      rotate: none;
    }
  }

  @media print {
    .checkbox[aria-checked="true"]:before {
      --tw-content: "✔︎";
      clip-path: none;
      background-color: rgba(0, 0, 0, 0);
      rotate: none;
    }
  }

  .checkbox:indeterminate {
    background-color: var(--input-color, var(--color-base-content));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .checkbox:indeterminate {
      background-color: var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, rgba(0, 0, 0, 0)));
    }
  }

  .checkbox:indeterminate:before {
    opacity: 1;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
    translate: 0 -35%;
    rotate: none;
  }

  .checkbox:disabled {
    cursor: not-allowed;
    opacity: .2;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .sticky {
    position: -webkit-sticky;
    position: sticky;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .-top-4 {
    top: calc(var(--spacing) * -4);
  }

  .-top-6 {
    top: calc(var(--spacing) * -6);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-3 {
    top: calc(var(--spacing) * 3);
  }

  .top-24 {
    top: calc(var(--spacing) * 24);
  }

  .-right-4 {
    right: calc(var(--spacing) * -4);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-3 {
    right: calc(var(--spacing) * 3);
  }

  .-bottom-4 {
    bottom: calc(var(--spacing) * -4);
  }

  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .-left-4 {
    left: calc(var(--spacing) * -4);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-3 {
    left: calc(var(--spacing) * 3);
  }

  .z-10 {
    z-index: 10;
  }

  .z-20 {
    z-index: 20;
  }

  .z-50 {
    z-index: 50;
  }

  .z-99 {
    z-index: 99;
  }

  .col-span-full {
    grid-column: 1 / -1;
  }

  .hero {
    background-position: center;
    background-size: cover;
    place-items: center;
    width: 100%;
    display: grid;
  }

  .hero > * {
    grid-row-start: 1;
    grid-column-start: 1;
  }

  .container {
    width: 100%;
  }

  @media (min-width: 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (min-width: 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (min-width: 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (min-width: 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (min-width: 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }

  .mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }

  .label {
    white-space: nowrap;
    color: currentColor;
    align-items: center;
    gap: .375rem;
    display: inline-flex;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .label {
      color: color-mix(in oklab, currentColor 60%, transparent);
    }
  }

  .label:has(input) {
    cursor: pointer;
  }

  .label:is(.input > *, .select > *) {
    white-space: nowrap;
    height: calc(100% - .5rem);
    font-size: inherit;
    align-items: center;
    padding-left: .75rem;
    padding-right: .75rem;
    display: flex;
  }

  .label:-webkit-any(.input > *, .select > *):first-child:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-right: var(--border) solid currentColor;
    margin-left: -.75rem;
    margin-right: .75rem;
  }

  .label:-moz-any(.input > *, .select > *):first-child:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-right: var(--border) solid currentColor;
    margin-left: -.75rem;
    margin-right: .75rem;
  }

  .label:is(.input > *, .select > *):first-child:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-right: var(--border) solid currentColor;
    margin-left: -.75rem;
    margin-right: .75rem;
  }

  .label:-webkit-any(.input > *, .select > *):first-child:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-left: var(--border) solid currentColor;
    margin-left: .75rem;
    margin-right: -.75rem;
  }

  .label:-moz-any(.input > *, .select > *):first-child:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-left: var(--border) solid currentColor;
    margin-left: .75rem;
    margin-right: -.75rem;
  }

  .label:is(.input > *, .select > *):first-child:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-left: var(--border) solid currentColor;
    margin-left: .75rem;
    margin-right: -.75rem;
  }

  @supports (color: color-mix(in lab, red, red)) {
    
  }

  .label:-webkit-any(.input > *, .select > *):last-child:not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-left: var(--border) solid currentColor;
    margin-left: .75rem;
    margin-right: -.75rem;
  }

  .label:-moz-any(.input > *, .select > *):last-child:not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-left: var(--border) solid currentColor;
    margin-left: .75rem;
    margin-right: -.75rem;
  }

  .label:is(.input > *, .select > *):last-child:not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-left: var(--border) solid currentColor;
    margin-left: .75rem;
    margin-right: -.75rem;
  }

  .label:-webkit-any(.input > *, .select > *):last-child:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-right: var(--border) solid currentColor;
    margin-left: -.75rem;
    margin-right: .75rem;
  }

  .label:-moz-any(.input > *, .select > *):last-child:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-right: var(--border) solid currentColor;
    margin-left: -.75rem;
    margin-right: .75rem;
  }

  .label:is(.input > *, .select > *):last-child:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-right: var(--border) solid currentColor;
    margin-left: -.75rem;
    margin-right: .75rem;
  }

  @supports (color: color-mix(in lab, red, red)) {
    
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }

  .ml-11 {
    margin-left: calc(var(--spacing) * 11);
  }

  .join {
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
    align-items: stretch;
    display: inline-flex;
  }

  .join :where(.join-item):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-top-left-radius: var(--join-ss, 0);
    border-top-right-radius: var(--join-se, 0);
    border-bottom-right-radius: var(--join-ee, 0);
    border-bottom-left-radius: var(--join-es, 0);
  }

  .join :where(.join-item):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-top-left-radius: var(--join-ss, 0);
    border-top-right-radius: var(--join-se, 0);
    border-bottom-right-radius: var(--join-ee, 0);
    border-bottom-left-radius: var(--join-es, 0);
  }

  .join :where(.join-item):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    border-top-left-radius: var(--join-ss, 0);
    border-top-right-radius: var(--join-se, 0);
    border-bottom-right-radius: var(--join-ee, 0);
    border-bottom-left-radius: var(--join-es, 0);
  }

  .join :where(.join-item):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-top-right-radius: var(--join-ss, 0);
    border-top-left-radius: var(--join-se, 0);
    border-bottom-left-radius: var(--join-ee, 0);
    border-bottom-right-radius: var(--join-es, 0);
  }

  .join :where(.join-item):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-top-right-radius: var(--join-ss, 0);
    border-top-left-radius: var(--join-se, 0);
    border-bottom-left-radius: var(--join-ee, 0);
    border-bottom-right-radius: var(--join-es, 0);
  }

  .join :where(.join-item):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    border-top-right-radius: var(--join-ss, 0);
    border-top-left-radius: var(--join-se, 0);
    border-bottom-left-radius: var(--join-ee, 0);
    border-bottom-right-radius: var(--join-es, 0);
  }

  .join :where(.join-item) * {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }

  .join > .join-item:where(:first-child) {
    --join-ss: var(--radius-field);
    --join-se: 0;
    --join-es: var(--radius-field);
    --join-ee: 0;
  }

  .join :first-child:not(:last-child) :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: 0;
    --join-es: var(--radius-field);
    --join-ee: 0;
  }

  .join > .join-item:where(:last-child) {
    --join-ss: 0;
    --join-se: var(--radius-field);
    --join-es: 0;
    --join-ee: var(--radius-field);
  }

  .join :last-child:not(:first-child) :where(.join-item) {
    --join-ss: 0;
    --join-se: var(--radius-field);
    --join-es: 0;
    --join-ee: var(--radius-field);
  }

  .join > .join-item:where(:only-child) {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }

  .join :only-child :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field);
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  :root .prose {
    --tw-prose-body: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root .prose {
      --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, rgba(0, 0, 0, 0));
    }
  }

  :root .prose {
    --tw-prose-headings: var(--color-base-content);
    --tw-prose-lead: var(--color-base-content);
    --tw-prose-links: var(--color-base-content);
    --tw-prose-bold: var(--color-base-content);
    --tw-prose-counters: var(--color-base-content);
    --tw-prose-bullets: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root .prose {
      --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, rgba(0, 0, 0, 0));
    }
  }

  :root .prose {
    --tw-prose-hr: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root .prose {
      --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, rgba(0, 0, 0, 0));
    }
  }

  :root .prose {
    --tw-prose-quotes: var(--color-base-content);
    --tw-prose-quote-borders: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root .prose {
      --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, rgba(0, 0, 0, 0));
    }
  }

  :root .prose {
    --tw-prose-captions: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root .prose {
      --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, rgba(0, 0, 0, 0));
    }
  }

  :root .prose {
    --tw-prose-code: var(--color-base-content);
    --tw-prose-pre-code: var(--color-neutral-content);
    --tw-prose-pre-bg: var(--color-neutral);
    --tw-prose-th-borders: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root .prose {
      --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, rgba(0, 0, 0, 0));
    }
  }

  :root .prose {
    --tw-prose-td-borders: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root .prose {
      --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, rgba(0, 0, 0, 0));
    }
  }

  :root .prose {
    --tw-prose-kbd: var(--color-base-content);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :root .prose {
      --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, rgba(0, 0, 0, 0));
    }
  }

  :root .prose :where(code):not(pre > code) {
    background-color: var(--color-base-200);
    border-radius: var(--radius-selector);
    border: var(--border) solid var(--color-base-300);
    font-weight: inherit;
    padding-left: .5em;
    padding-right: .5em;
  }

  :root .prose :where(code):not(pre > code):before {
    display: none;
  }

  :root .prose :where(code):not(pre > code):after {
    display: none;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .table {
    display: table;
  }

  .aspect-\[4\/3\] {
    aspect-ratio: 4 / 3;
  }

  .aspect-\[16\/9\] {
    aspect-ratio: 16 / 9;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-24 {
    height: calc(var(--spacing) * 24);
  }

  .h-96 {
    height: calc(var(--spacing) * 96);
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-screen {
    height: 100vh;
  }

  .max-h-60 {
    max-height: calc(var(--spacing) * 60);
  }

  .max-h-\[90vh\] {
    max-height: 90vh;
  }

  .min-h-dvh {
    min-height: 100dvh;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-1\/2 {
    width: 50%;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-2\/3 {
    width: 66.6667%;
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-3\/4 {
    width: 75%;
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-11\/12 {
    width: 91.6667%;
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-14 {
    width: calc(var(--spacing) * 14);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-56 {
    width: calc(var(--spacing) * 56);
  }

  .w-full {
    width: 100%;
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-5xl {
    max-width: var(--container-5xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .max-w-none {
    max-width: none;
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .min-w-\[200px\] {
    min-width: 200px;
  }

  .flex-1 {
    flex: 1;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .-translate-x-2 {
    --tw-translate-x: calc(var(--spacing) * -2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-x-4 {
    --tw-translate-x: calc(var(--spacing) * -4);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-2 {
    --tw-translate-y: calc(var(--spacing) * 2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-0 {
    --tw-scale-x: 0%;
    --tw-scale-y: 0%;
    --tw-scale-z: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .rotate-0 {
    rotate: none;
  }

  .rotate-90 {
    rotate: 90deg;
  }

  .rotate-180 {
    rotate: 180deg;
  }

  .transform {
    transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
  }

  .animate-bounce {
    animation: var(--animate-bounce);
  }

  .animate-pulse {
    animation: var(--animate-pulse);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .link {
    cursor: pointer;
    -webkit-text-decoration-line: underline;
    text-decoration-line: underline;
  }

  .link:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .link:focus {
      outline-offset: 2px;
      outline: 2px solid rgba(0, 0, 0, 0);
    }
  }

  .link:focus-visible {
    outline-offset: 2px;
    outline: 2px solid;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-top: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-bottom: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.-space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
  }

  :where(.-space-x-2 > :not(:last-child)):not(:-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.-space-x-2 > :not(:last-child)):not(:-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.-space-x-2 > :not(:last-child)):not(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi))) {
    margin-left: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
    margin-right: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.-space-x-2 > :not(:last-child)):-webkit-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.-space-x-2 > :not(:last-child)):-moz-any(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.-space-x-2 > :not(:last-child)):is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)) {
    margin-right: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
    margin-left: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius);
  }

  .rounded-md {
    border-radius: calc(var(--radius)  - 2px);
  }

  .rounded-xl {
    border-radius: calc(var(--radius)  + 4px);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }

  .border-gray-200 {
    border-color: var(--color-gray-200);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-neutral-300 {
    border-color: var(--color-neutral-300);
  }

  .border-orange-100 {
    border-color: var(--color-orange-100);
  }

  .border-orange-200 {
    border-color: var(--color-orange-200);
  }

  .border-orange-200\/60 {
    border-color: rgba(255, 215, 168, .6);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-200\/60 {
      border-color: color-mix(in oklab, var(--color-orange-200) 60%, transparent);
    }
  }

  .border-orange-300 {
    border-color: var(--color-orange-300);
  }

  .border-orange-500 {
    border-color: var(--color-orange-500);
  }

  .border-orange-600 {
    border-color: var(--color-orange-600);
  }

  .border-red-500 {
    border-color: var(--color-red-500);
  }

  .border-white {
    border-color: var(--color-white);
  }

  .border-t-transparent {
    border-top-color: rgba(0, 0, 0, 0);
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-black\/50 {
    background-color: rgba(0, 0, 0, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-black\/60 {
    background-color: rgba(0, 0, 0, .6);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/60 {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }

  .bg-black\/80 {
    background-color: rgba(0, 0, 0, .8);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/80 {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }

  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }

  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }

  .bg-gray-700 {
    background-color: var(--color-gray-700);
  }

  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }

  .bg-green-50 {
    background-color: var(--color-green-50);
  }

  .bg-green-100 {
    background-color: var(--color-green-100);
  }

  .bg-green-600 {
    background-color: var(--color-green-600);
  }

  .bg-muted {
    background-color: var(--muted);
  }

  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }

  .bg-orange-50 {
    background-color: var(--color-orange-50);
  }

  .bg-orange-100 {
    background-color: var(--color-orange-100);
  }

  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }

  .bg-orange-600 {
    background-color: var(--color-orange-600);
  }

  .bg-orange-800 {
    background-color: var(--color-orange-800);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-purple-50 {
    background-color: var(--color-purple-50);
  }

  .bg-red-50 {
    background-color: var(--color-red-50);
  }

  .bg-red-100 {
    background-color: var(--color-red-100);
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-red-600 {
    background-color: var(--color-red-600);
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-transparent {
    background-color: rgba(0, 0, 0, 0);
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-white\/90 {
    background-color: rgba(255, 255, 255, .9);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/90 {
      background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }

  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-black\/20 {
    --tw-gradient-from: rgba(0, 0, 0, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-black\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }

  .from-black\/20 {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-neutral-400 {
    --tw-gradient-from: var(--color-neutral-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-50 {
    --tw-gradient-from: var(--color-orange-50);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-600 {
    --tw-gradient-from: var(--color-orange-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-white {
    --tw-gradient-via: var(--color-white);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-neutral-300 {
    --tw-gradient-to: var(--color-neutral-300);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-100 {
    --tw-gradient-to: var(--color-orange-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-600 {
    --tw-gradient-to: var(--color-red-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-white {
    --tw-gradient-to: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text;
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-yellow-400 {
    fill: var(--color-yellow-400);
  }

  .stroke-neutral-500 {
    stroke: var(--color-neutral-500);
  }

  .object-cover {
    object-fit: cover;
  }

  .p-0\.5 {
    padding: calc(var(--spacing) * .5);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-15 {
    padding-block: calc(var(--spacing) * 15);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .py-18 {
    padding-block: calc(var(--spacing) * 18);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }

  .pt-25 {
    padding-top: calc(var(--spacing) * 25);
  }

  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }

  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }

  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .font-sans {
    font-family: var(--font-geist-sans);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-\[\#00e571\]\/50 {
    color: rgba(0, 229, 113, .5);
    color: color(display-p3 .408784 .884728 .492409 / .5);
    color: lab(80.2761% -66.8792 42.5545 / .5);
  }

  .text-\[\#8b00ff\]\/50 {
    color: rgba(139, 0, 255, .5);
    color: color(display-p3 .498164 .0902104 .961633 / .5);
    color: lab(40.9067% 75.9226 -92.8 / .5);
  }

  .text-black {
    color: var(--color-black);
  }

  .text-blue-600 {
    color: var(--color-blue-600);
  }

  .text-blue-800 {
    color: var(--color-blue-800);
  }

  .text-gray-300 {
    color: var(--color-gray-300);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-gray-600 {
    color: var(--color-gray-600);
  }

  .text-gray-700 {
    color: var(--color-gray-700);
  }

  .text-gray-800 {
    color: var(--color-gray-800);
  }

  .text-gray-900 {
    color: var(--color-gray-900);
  }

  .text-green-600 {
    color: var(--color-green-600);
  }

  .text-green-800 {
    color: var(--color-green-800);
  }

  .text-orange-400 {
    color: var(--color-orange-400);
  }

  .text-orange-500 {
    color: var(--color-orange-500);
  }

  .text-orange-600 {
    color: var(--color-orange-600);
  }

  .text-orange-800 {
    color: var(--color-orange-800);
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-purple-600 {
    color: var(--color-purple-600);
  }

  .text-purple-800 {
    color: var(--color-purple-800);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-red-600 {
    color: var(--color-red-600);
  }

  .text-red-800 {
    color: var(--color-red-800);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-transparent {
    color: rgba(0, 0, 0, 0);
  }

  .text-white {
    color: var(--color-white);
  }

  .text-yellow-400 {
    color: var(--color-yellow-400);
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .placeholder-gray-500::placeholder {
    color: var(--color-gray-500);
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-5 {
    opacity: .05;
  }

  .opacity-90 {
    opacity: .9;
  }

  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgba(0, 0, 0, .25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 2px 4px -2px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 1px 2px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 8px 10px -6px var(--tw-shadow-color, rgba(0, 0, 0, .1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgba(0, 0, 0, .05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-orange-200\/70 {
    --tw-ring-color: rgba(255, 215, 168, .7);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .ring-orange-200\/70 {
      --tw-ring-color: color-mix(in oklab, var(--color-orange-200) 70%, transparent);
    }
  }

  .ring-orange-600 {
    --tw-ring-color: var(--color-orange-600);
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-\[0\.5px\] {
    --tw-blur: blur(.5px);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, -webkit-text-decoration-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, -webkit-text-decoration-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-900 {
    --tw-duration: .9s;
    transition-duration: .9s;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .\[--fill-final\:var\(--color-yellow-300\)\] {
    --fill-final: var(--color-yellow-300);
  }

  .\[--fill-initial\:var\(--color-neutral-50\)\] {
    --fill-initial: var(--color-neutral-50);
  }

  .\[--shadow-color\:var\(--color-neutral-500\)\] {
    --shadow-color: var(--color-neutral-500);
  }

  .\[perspective\:1000px\] {
    perspective: 1000px;
  }

  @media (hover: hover) {
    .group-hover\:scale-105:is(:where(.group):hover *) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:bg-orange-200:is(:where(.group):hover *) {
      background-color: var(--color-orange-200);
    }
  }

  @media (hover: hover) {
    .group-hover\:text-orange-600:is(:where(.group):hover *) {
      color: var(--color-orange-600);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .hover\:-translate-y-0\.5:hover {
      --tw-translate-y: calc(var(--spacing) * -.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .hover\:-translate-y-1:hover {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .hover\:border-orange-300:hover {
      border-color: var(--color-orange-300);
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-blue-600:hover {
      background-color: var(--color-blue-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-50:hover {
      background-color: var(--color-gray-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-gray-100:hover {
      background-color: var(--color-gray-100);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-50:hover {
      background-color: var(--color-orange-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-200:hover {
      background-color: var(--color-orange-200);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-500:hover {
      background-color: var(--color-orange-500);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-600:hover {
      background-color: var(--color-orange-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-orange-700:hover {
      background-color: var(--color-orange-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-50:hover {
      background-color: var(--color-red-50);
    }
  }

  @media (hover: hover) {
    .hover\:bg-red-600:hover {
      background-color: var(--color-red-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-sky-500:hover {
      background-color: var(--color-sky-500);
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-600:hover {
      color: var(--color-gray-600);
    }
  }

  @media (hover: hover) {
    .hover\:text-orange-400:hover {
      color: var(--color-orange-400);
    }
  }

  @media (hover: hover) {
    .hover\:text-orange-600:hover {
      color: var(--color-orange-600);
    }
  }

  @media (hover: hover) {
    .hover\:text-white:hover {
      color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      -webkit-text-decoration-line: underline;
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-lg:hover {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 4px 6px -4px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-md:hover {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 2px 4px -2px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-xl:hover {
      --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgba(0, 0, 0, .1)), 0 8px 10px -6px var(--tw-shadow-color, rgba(0, 0, 0, .1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus\:border-orange-500:focus {
    border-color: var(--color-orange-500);
  }

  .focus\:border-red-500:focus {
    border-color: var(--color-red-500);
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-gray-500:focus {
    --tw-ring-color: var(--color-gray-500);
  }

  .focus\:ring-orange-500:focus {
    --tw-ring-color: var(--color-orange-500);
  }

  .focus\:ring-orange-500\/20:focus {
    --tw-ring-color: rgba(254, 110, 0, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus\:ring-orange-500\/20:focus {
      --tw-ring-color: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
  }

  .focus\:ring-red-500:focus {
    --tw-ring-color: var(--color-red-500);
  }

  .focus\:ring-red-500\/20:focus {
    --tw-ring-color: rgba(251, 44, 54, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus\:ring-red-500\/20:focus {
      --tw-ring-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }

  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  :is(.\*\:data-\[slot\=avatar\]\:ring-2 > *)[data-slot="avatar"] {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  :is(.\*\:data-\[slot\=avatar\]\:ring-background > *)[data-slot="avatar"] {
    --tw-ring-color: var(--background);
  }

  :is(.\*\:data-\[slot\=avatar\]\:grayscale > *)[data-slot="avatar"] {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  @supports ((-webkit-backdrop-filter: var(--tw)) or (backdrop-filter: var(--tw))) {
    .supports-\[backdrop-filter\]\:bg-white\/70 {
      background-color: rgba(255, 255, 255, .7);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .supports-\[backdrop-filter\]\:bg-white\/70 {
        background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
      }
    }
  }

  @media (min-width: 40rem) {
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 40rem) {
    .sm\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (min-width: 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (min-width: 40rem) {
    .sm\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (min-width: 40rem) {
    .sm\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (min-width: 40rem) {
    .sm\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (min-width: 48rem) {
    .md\:flex {
      display: flex;
    }
  }

  @media (min-width: 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (min-width: 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (min-width: 64rem) {
    .lg\:col-span-1 {
      grid-column: span 1 / span 1;
    }
  }

  @media (min-width: 64rem) {
    .lg\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (min-width: 64rem) {
    .lg\:mx-0 {
      margin-inline: calc(var(--spacing) * 0);
    }
  }

  @media (min-width: 64rem) {
    .lg\:flex {
      display: flex;
    }
  }

  @media (min-width: 64rem) {
    .lg\:h-120 {
      height: calc(var(--spacing) * 120);
    }
  }

  @media (min-width: 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (min-width: 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (min-width: 64rem) {
    .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }

  @media (min-width: 64rem) {
    .lg\:py-20 {
      padding-block: calc(var(--spacing) * 20);
    }
  }

  @media (min-width: 64rem) {
    .lg\:py-32 {
      padding-block: calc(var(--spacing) * 32);
    }
  }

  @media (min-width: 64rem) {
    .lg\:pt-25 {
      padding-top: calc(var(--spacing) * 25);
    }
  }

  @media (min-width: 64rem) {
    .lg\:pt-30 {
      padding-top: calc(var(--spacing) * 30);
    }
  }

  @media (min-width: 64rem) {
    .lg\:pb-20 {
      padding-bottom: calc(var(--spacing) * 20);
    }
  }

  @media (min-width: 64rem) {
    .lg\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  @media (min-width: 64rem) {
    .lg\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (min-width: 64rem) {
    .lg\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }

  .dark\:scale-0:is(.dark *) {
    --tw-scale-x: 0%;
    --tw-scale-y: 0%;
    --tw-scale-z: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .dark\:scale-100:is(.dark *) {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .dark\:-rotate-90:is(.dark *) {
    rotate: -90deg;
  }

  .dark\:rotate-0:is(.dark *) {
    rotate: none;
  }

  .dark\:border-gray-600:is(.dark *) {
    border-color: var(--color-gray-600);
  }

  .dark\:border-gray-700:is(.dark *) {
    border-color: var(--color-gray-700);
  }

  .dark\:border-input:is(.dark *) {
    border-color: var(--input);
  }

  .dark\:border-orange-400:is(.dark *) {
    border-color: var(--color-orange-400);
  }

  .dark\:bg-blue-900\/20:is(.dark *) {
    background-color: rgba(28, 57, 142, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-blue-900\/20:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
    }
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-gray-600:is(.dark *) {
    background-color: var(--color-gray-600);
  }

  .dark\:bg-gray-700:is(.dark *) {
    background-color: var(--color-gray-700);
  }

  .dark\:bg-gray-800:is(.dark *) {
    background-color: var(--color-gray-800);
  }

  .dark\:bg-gray-800\/50:is(.dark *) {
    background-color: rgba(30, 41, 57, .5);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-800\/50:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-800) 50%, transparent);
    }
  }

  .dark\:bg-gray-900:is(.dark *) {
    background-color: var(--color-gray-900);
  }

  .dark\:bg-gray-900\/80:is(.dark *) {
    background-color: rgba(16, 24, 40, .8);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-900\/80:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-gray-900) 80%, transparent);
    }
  }

  .dark\:bg-green-900\/20:is(.dark *) {
    background-color: rgba(13, 84, 43, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-green-900\/20:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-green-900) 20%, transparent);
    }
  }

  .dark\:bg-green-900\/30:is(.dark *) {
    background-color: rgba(13, 84, 43, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-green-900\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-green-900) 30%, transparent);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  .dark\:bg-neutral-500:is(.dark *) {
    background-color: var(--color-neutral-500);
  }

  .dark\:bg-orange-900\/20:is(.dark *) {
    background-color: rgba(126, 42, 12, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-orange-900\/20:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-orange-900) 20%, transparent);
    }
  }

  .dark\:bg-orange-900\/30:is(.dark *) {
    background-color: rgba(126, 42, 12, .3);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-orange-900\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-orange-900) 30%, transparent);
    }
  }

  .dark\:bg-purple-900\/20:is(.dark *) {
    background-color: rgba(89, 22, 139, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-purple-900\/20:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-purple-900) 20%, transparent);
    }
  }

  .dark\:bg-red-900\/20:is(.dark *) {
    background-color: rgba(130, 24, 26, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-red-900\/20:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-red-900) 20%, transparent);
    }
  }

  .dark\:from-gray-800:is(.dark *) {
    --tw-gradient-from: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:from-gray-900:is(.dark *) {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:via-gray-800:is(.dark *) {
    --tw-gradient-via: var(--color-gray-800);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .dark\:to-gray-700:is(.dark *) {
    --tw-gradient-to: var(--color-gray-700);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:to-orange-900\/20:is(.dark *) {
    --tw-gradient-to: rgba(126, 42, 12, .2);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-orange-900\/20:is(.dark *) {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-900) 20%, transparent);
    }
  }

  .dark\:to-orange-900\/20:is(.dark *) {
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .dark\:stroke-neutral-100:is(.dark *) {
    stroke: var(--color-neutral-100);
  }

  .dark\:text-\[\#00e571\]:is(.dark *) {
    color: #00e571;
  }

  .dark\:text-\[\#8b00ff\]:is(.dark *) {
    color: #8b00ff;
  }

  .dark\:text-blue-200:is(.dark *) {
    color: var(--color-blue-200);
  }

  .dark\:text-blue-300:is(.dark *) {
    color: var(--color-blue-300);
  }

  .dark\:text-blue-400:is(.dark *) {
    color: var(--color-blue-400);
  }

  .dark\:text-gray-100:is(.dark *) {
    color: var(--color-gray-100);
  }

  .dark\:text-gray-200:is(.dark *) {
    color: var(--color-gray-200);
  }

  .dark\:text-gray-300:is(.dark *) {
    color: var(--color-gray-300);
  }

  .dark\:text-gray-400:is(.dark *) {
    color: var(--color-gray-400);
  }

  .dark\:text-gray-900:is(.dark *) {
    color: var(--color-gray-900);
  }

  .dark\:text-green-200:is(.dark *) {
    color: var(--color-green-200);
  }

  .dark\:text-green-300:is(.dark *) {
    color: var(--color-green-300);
  }

  .dark\:text-green-400:is(.dark *) {
    color: var(--color-green-400);
  }

  .dark\:text-orange-200:is(.dark *) {
    color: var(--color-orange-200);
  }

  .dark\:text-orange-300:is(.dark *) {
    color: var(--color-orange-300);
  }

  .dark\:text-orange-400:is(.dark *) {
    color: var(--color-orange-400);
  }

  .dark\:text-purple-200:is(.dark *) {
    color: var(--color-purple-200);
  }

  .dark\:text-purple-300:is(.dark *) {
    color: var(--color-purple-300);
  }

  .dark\:text-purple-400:is(.dark *) {
    color: var(--color-purple-400);
  }

  .dark\:text-red-200:is(.dark *) {
    color: var(--color-red-200);
  }

  .dark\:text-red-300:is(.dark *) {
    color: var(--color-red-300);
  }

  .dark\:text-red-400:is(.dark *) {
    color: var(--color-red-400);
  }

  .dark\:text-white:is(.dark *) {
    color: var(--color-white);
  }

  .dark\:placeholder-gray-400:is(.dark *)::placeholder {
    color: var(--color-gray-400);
  }

  .dark\:ring-gray-600:is(.dark *) {
    --tw-ring-color: var(--color-gray-600);
  }

  .dark\:\[--fill-final\:var\(--color-yellow-500\)\]:is(.dark *) {
    --fill-final: var(--color-yellow-500);
  }

  .dark\:\[--fill-initial\:var\(--color-neutral-800\)\]:is(.dark *) {
    --fill-initial: var(--color-neutral-800);
  }

  .dark\:\[--shadow-color\:var\(--color-neutral-100\)\]:is(.dark *) {
    --shadow-color: var(--color-neutral-100);
  }

  @media (hover: hover) {
    .dark\:hover\:border-orange-500:is(.dark *):hover {
      border-color: var(--color-orange-500);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:is(.dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-600:is(.dark *):hover {
      background-color: var(--color-gray-600);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-700:is(.dark *):hover {
      background-color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-gray-800:is(.dark *):hover {
      background-color: var(--color-gray-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-orange-400:is(.dark *):hover {
      background-color: var(--color-orange-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-orange-800:is(.dark *):hover {
      background-color: var(--color-orange-800);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-orange-900\/20:is(.dark *):hover {
      background-color: rgba(126, 42, 12, .2);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-orange-900\/20:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--color-orange-900) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-gray-300:is(.dark *):hover {
      color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-orange-400:is(.dark *):hover {
      color: var(--color-orange-400);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-white:is(.dark *):hover {
      color: var(--color-white);
    }
  }

  .dark\:focus\:ring-offset-gray-800:is(.dark *):focus {
    --tw-ring-offset-color: var(--color-gray-800);
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
}

@property --tw-animation-delay {
  syntax: "*";
  inherits: false;
  initial-value: 0s;
}

@property --tw-animation-direction {
  syntax: "*";
  inherits: false;
  initial-value: normal;
}

@property --tw-animation-duration {
  syntax: "*";
  inherits: false
}

@property --tw-animation-fill-mode {
  syntax: "*";
  inherits: false;
  initial-value: none;
}

@property --tw-animation-iteration-count {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-enter-blur {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-enter-opacity {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-enter-rotate {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-enter-scale {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-enter-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-enter-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-exit-blur {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-exit-opacity {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-exit-rotate {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-exit-scale {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-exit-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-exit-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

:root {
  --radius: .625rem;
  --background: #fff;
  --foreground: #0a0a0a;
  --card: #fff;
  --card-foreground: #0a0a0a;
  --popover: #fff;
  --popover-foreground: #0a0a0a;
  --primary: #171717;
  --primary-foreground: #fafafa;
  --secondary: #f5f5f5;
  --secondary-foreground: #171717;
  --muted: #f5f5f5;
  --muted-foreground: #737373;
  --accent: #f5f5f5;
  --accent-foreground: #171717;
  --destructive: #e40014;
  --border: #e5e5e5;
  --input: #e5e5e5;
  --ring: #a1a1a1;
  --chart-1: #f05100;
  --chart-2: #009588;
  --chart-3: #104e64;
  --chart-4: #fcbb00;
  --chart-5: #f99c00;
  --sidebar: #fafafa;
  --sidebar-foreground: #0a0a0a;
  --sidebar-primary: #171717;
  --sidebar-primary-foreground: #fafafa;
  --sidebar-accent: #f5f5f5;
  --sidebar-accent-foreground: #171717;
  --sidebar-border: #e5e5e5;
  --sidebar-ring: #a1a1a1;
}

@supports (color: color(display-p3 0 0 0)) {
  :root {
    --background: color(display-p3 1 1 1);
    --foreground: color(display-p3 .0393882 .0393882 .0393882);
    --card: color(display-p3 1 1 1);
    --card-foreground: color(display-p3 .0393882 .0393882 .0393882);
    --popover: color(display-p3 1 1 1);
    --popover-foreground: color(display-p3 .0393882 .0393882 .0393882);
    --primary: color(display-p3 .0905274 .0905274 .0905274);
    --primary-foreground: color(display-p3 .980256 .980256 .980256);
    --secondary: color(display-p3 .960587 .960587 .960587);
    --secondary-foreground: color(display-p3 .0905274 .0905274 .0905274);
    --muted: color(display-p3 .960587 .960587 .960587);
    --muted-foreground: color(display-p3 .451519 .451519 .451519);
    --accent: color(display-p3 .960587 .960587 .960587);
    --accent-foreground: color(display-p3 .0905274 .0905274 .0905274);
    --destructive: color(display-p3 .830323 .140383 .133196);
    --border: color(display-p3 .898161 .898161 .898161);
    --input: color(display-p3 .898161 .898161 .898161);
    --ring: color(display-p3 .630163 .630163 .630163);
    --chart-1: color(display-p3 .887467 .341665 .0219962);
    --chart-2: color(display-p3 .207114 .579584 .53668);
    --chart-3: color(display-p3 .142586 .302008 .385094);
    --chart-4: color(display-p3 .959186 .738519 .118268);
    --chart-5: color(display-p3 .93994 .620584 .0585367);
    --sidebar: color(display-p3 .980256 .980256 .980256);
    --sidebar-foreground: color(display-p3 .0393882 .0393882 .0393882);
    --sidebar-primary: color(display-p3 .0905274 .0905274 .0905274);
    --sidebar-primary-foreground: color(display-p3 .980256 .980256 .980256);
    --sidebar-accent: color(display-p3 .960587 .960587 .960587);
    --sidebar-accent-foreground: color(display-p3 .0905274 .0905274 .0905274);
    --sidebar-border: color(display-p3 .898161 .898161 .898161);
    --sidebar-ring: color(display-p3 .630163 .630163 .630163);
  }
}

@supports (color: lab(0% 0 0)) {
  :root {
    --background: lab(100% 0 0);
    --foreground: lab(2.75381% 0 0);
    --card: lab(100% 0 0);
    --card-foreground: lab(2.75381% 0 0);
    --popover: lab(100% 0 0);
    --popover-foreground: lab(2.75381% 0 0);
    --primary: lab(7.78201% -.0000149012 0);
    --primary-foreground: lab(98.26% 0 0);
    --secondary: lab(96.52% -.0000596046 0);
    --secondary-foreground: lab(7.78201% -.0000149012 0);
    --muted: lab(96.52% -.0000596046 0);
    --muted-foreground: lab(48.496% 0 0);
    --accent: lab(96.52% -.0000596046 0);
    --accent-foreground: lab(7.78201% -.0000149012 0);
    --destructive: lab(48.4493% 77.4328 61.5452);
    --border: lab(90.952% -.0000596046 0);
    --input: lab(90.952% -.0000596046 0);
    --ring: lab(66.128% -.0000298023 .0000119209);
    --chart-1: lab(57.1026% 64.2584 89.8886);
    --chart-2: lab(55.0223% -41.0774 -3.90277);
    --chart-3: lab(30.372% -13.1853 -18.7887);
    --chart-4: lab(80.1641% 16.6016 99.2089);
    --chart-5: lab(72.7183% 31.8672 97.9407);
    --sidebar: lab(98.26% 0 0);
    --sidebar-foreground: lab(2.75381% 0 0);
    --sidebar-primary: lab(7.78201% -.0000149012 0);
    --sidebar-primary-foreground: lab(98.26% 0 0);
    --sidebar-accent: lab(96.52% -.0000596046 0);
    --sidebar-accent-foreground: lab(7.78201% -.0000149012 0);
    --sidebar-border: lab(90.952% -.0000596046 0);
    --sidebar-ring: lab(66.128% -.0000298023 .0000119209);
  }
}

.dark {
  --background: #0a0a0a;
  --foreground: #fafafa;
  --card: #171717;
  --card-foreground: #fafafa;
  --popover: #171717;
  --popover-foreground: #fafafa;
  --primary: #e5e5e5;
  --primary-foreground: #171717;
  --secondary: #262626;
  --secondary-foreground: #fafafa;
  --muted: #262626;
  --muted-foreground: #a1a1a1;
  --accent: #262626;
  --accent-foreground: #fafafa;
  --destructive: #ff6568;
  --border: rgba(255, 255, 255, .1);
  --input: rgba(255, 255, 255, .15);
  --ring: #737373;
  --chart-1: #1447e6;
  --chart-2: #00bb7f;
  --chart-3: #f99c00;
  --chart-4: #ac4bff;
  --chart-5: #ff2357;
  --sidebar: #171717;
  --sidebar-foreground: #fafafa;
  --sidebar-primary: #1447e6;
  --sidebar-primary-foreground: #fafafa;
  --sidebar-accent: #262626;
  --sidebar-accent-foreground: #fafafa;
  --sidebar-border: rgba(255, 255, 255, .1);
  --sidebar-ring: #737373;
}

@supports (color: color(display-p3 0 0 0)) {
  .dark {
    --background: color(display-p3 .0393882 .0393882 .0393882);
    --foreground: color(display-p3 .980256 .980256 .980256);
    --card: color(display-p3 .0905274 .0905274 .0905274);
    --card-foreground: color(display-p3 .980256 .980256 .980256);
    --popover: color(display-p3 .0905274 .0905274 .0905274);
    --popover-foreground: color(display-p3 .980256 .980256 .980256);
    --primary: color(display-p3 .898161 .898161 .898161);
    --primary-foreground: color(display-p3 .0905274 .0905274 .0905274);
    --secondary: color(display-p3 .149382 .149382 .149382);
    --secondary-foreground: color(display-p3 .980256 .980256 .980256);
    --muted: color(display-p3 .149382 .149382 .149382);
    --muted-foreground: color(display-p3 .630163 .630163 .630163);
    --accent: color(display-p3 .149382 .149382 .149382);
    --accent-foreground: color(display-p3 .980256 .980256 .980256);
    --destructive: color(display-p3 .933534 .431676 .423491);
    --border: color(display-p3 1 1 1 / .1);
    --input: color(display-p3 1 1 1 / .15);
    --ring: color(display-p3 .451519 .451519 .451519);
    --chart-1: color(display-p3 .1379 .274983 .867624);
    --chart-2: color(display-p3 .267113 .726847 .508397);
    --chart-3: color(display-p3 .93994 .620584 .0585367);
    --chart-4: color(display-p3 .629519 .30089 .990817);
    --chart-5: color(display-p3 .921824 .240748 .355666);
    --sidebar: color(display-p3 .0905274 .0905274 .0905274);
    --sidebar-foreground: color(display-p3 .980256 .980256 .980256);
    --sidebar-primary: color(display-p3 .1379 .274983 .867624);
    --sidebar-primary-foreground: color(display-p3 .980256 .980256 .980256);
    --sidebar-accent: color(display-p3 .149382 .149382 .149382);
    --sidebar-accent-foreground: color(display-p3 .980256 .980256 .980256);
    --sidebar-border: color(display-p3 1 1 1 / .1);
    --sidebar-ring: color(display-p3 .451519 .451519 .451519);
  }
}

@supports (color: lab(0% 0 0)) {
  .dark {
    --background: lab(2.75381% 0 0);
    --foreground: lab(98.26% 0 0);
    --card: lab(7.78201% -.0000149012 0);
    --card-foreground: lab(98.26% 0 0);
    --popover: lab(7.78201% -.0000149012 0);
    --popover-foreground: lab(98.26% 0 0);
    --primary: lab(90.952% -.0000596046 0);
    --primary-foreground: lab(7.78201% -.0000149012 0);
    --secondary: lab(15.204% 0 0);
    --secondary-foreground: lab(98.26% 0 0);
    --muted: lab(15.204% 0 0);
    --muted-foreground: lab(66.128% -.0000298023 .0000119209);
    --accent: lab(15.204% 0 0);
    --accent-foreground: lab(98.26% 0 0);
    --destructive: lab(63.7053% 60.7449 31.3109);
    --border: lab(100% 0 0 / .1);
    --input: lab(100% 0 0 / .15);
    --ring: lab(48.496% 0 0);
    --chart-1: lab(36.9089% 35.0961 -85.6872);
    --chart-2: lab(66.9756% -58.27 19.5419);
    --chart-3: lab(72.7183% 31.8672 97.9407);
    --chart-4: lab(52.0183% 66.11 -78.2316);
    --chart-5: lab(56.101% 79.4329 31.4532);
    --sidebar: lab(7.78201% -.0000149012 0);
    --sidebar-foreground: lab(98.26% 0 0);
    --sidebar-primary: lab(36.9089% 35.0961 -85.6872);
    --sidebar-primary-foreground: lab(98.26% 0 0);
    --sidebar-accent: lab(15.204% 0 0);
    --sidebar-accent-foreground: lab(98.26% 0 0);
    --sidebar-border: lab(100% 0 0 / .1);
    --sidebar-ring: lab(48.496% 0 0);
  }
}

.input-field {
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-orange-300);
  width: 100%;
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 2);
  color: var(--color-gray-600);
  --tw-outline-style: none;
  border-radius: .25rem;
  outline-style: none;
}

.input-field::placeholder {
  color: var(--color-gray-400);
}

.input-field:focus {
  border-color: var(--color-orange-600);
}

@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}

@keyframes radio {
  0% {
    padding: 5px;
  }

  50% {
    padding: 3px;
  }
}

@keyframes toast {
  0% {
    opacity: 0;
    scale: .9;
  }

  100% {
    opacity: 1;
    scale: 1;
  }
}

@keyframes dropdown {
  0% {
    opacity: 0;
  }
}

@keyframes rating {
  0%, 40% {
    filter: brightness(1.05) contrast(1.05);
    scale: 1.1;
  }
}

@keyframes skeleton {
  0% {
    background-position: 150%;
  }

  100% {
    background-position: -50%;
  }
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: rgba(0, 0, 0, 0);
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: rgba(0, 0, 0, 0);
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: rgba(0, 0, 0, 0);
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 rgba(0, 0, 0, 0);
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes bounce {
  0%, 100% {
    animation-timing-function: cubic-bezier(.8, 0, 1, 1);
    transform: translateY(-25%);
  }

  50% {
    animation-timing-function: cubic-bezier(0, 0, .2, 1);
    transform: none;
  }
}

/*# sourceMappingURL=%5Broot-of-the-server%5D__af6e68da._.css.map*/
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///E:/ProgrammingHero/Milestone_10/Module_57/recipe-book/app/register/page.jsx"],"sourcesContent":["\"use client\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { signIn } from \"next-auth/react\";\n\nexport default function Register() {\n  const router = useRouter();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [photoURL, setPhotoURL] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    // // Client-side password validation\n    // const hasUppercase = /[A-Z]/.test(password);\n    // const hasLowercase = /[a-z]/.test(password);\n    // const isLongEnough = password.length >= 6;\n\n    // if (!hasUppercase || !hasLowercase || !isLongEnough) {\n    //   setError(\n    //     \"Password must be at least 6 characters long and include both uppercase and lowercase letters.\"\n    //   );\n    //   return;\n    // }\n\n    try {\n      // Step 1: Register user in backend\n      const res = await fetch(\n        `${process.env.NEXT_PUBLIC_API_URL}/auth/register`,\n        {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name,\n            email,\n            password,\n            photoURL,\n          }),\n        }\n      );\n\n      if (!res.ok) {\n        const { message } = await res.json();\n        throw new Error(message || \"Registration failed\");\n      }\n\n      const data = await res.json();\n      console.log(\"Registration successful:\", data);\n\n      // Step 2: Automatically sign in with credentials\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email,\n        password,\n      });\n\n      if (result?.error) {\n        setError(result.error);\n      } else {\n        router.push(\"/\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center\">\n      <div className=\"w-full max-w-md rounded-xl border border-orange-300 bg-white p-8 shadow-md dark:bg-gray-800\">\n        <h2 className=\"mb-6 text-center text-3xl font-bold text-orange-600\">\n          Register\n        </h2>\n        <form onSubmit={handleRegister} className=\"space-y-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            required\n            className=\"input-field\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            required\n            className=\"input-field\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            className=\"input-field\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {error && <p className=\"text-sm text-red-500\">{error}</p>}\n          <input\n            type=\"url\"\n            placeholder=\"Photo URL\"\n            className=\"input-field\"\n            value={photoURL}\n            onChange={(e) => setPhotoURL(e.target.value)}\n          />\n\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-orange-500 py-2 text-white hover:bg-orange-600\"\n          >\n            Register\n          </button>\n        </form>\n\n        <p className=\"mt-4 text-center text-sm text-gray-600 dark:text-gray-200\">\n          Already have an account?{\" \"}\n          <Link href=\"/login\" className=\"text-orange-600\">\n            Login\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAiCW;;AAhCX;AACA;AACA;AACA;;;AAJA;;;;;AAMe,SAAS;;IACtB,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IAEnC,MAAM,iBAAiB,OAAO;QAC5B,EAAE,cAAc;QAChB,SAAS;QAET,qCAAqC;QACrC,+CAA+C;QAC/C,+CAA+C;QAC/C,6CAA6C;QAE7C,yDAAyD;QACzD,cAAc;QACd,sGAAsG;QACtG,OAAO;QACP,YAAY;QACZ,IAAI;QAEJ,IAAI;YACF,mCAAmC;YACnC,MAAM,MAAM,MAAM,MAChB,AAAC,GAAkC,0FAAA,mBACnC;gBACE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;oBACA;oBACA;gBACF;YACF;YAGF,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;gBAClC,MAAM,IAAI,MAAM,WAAW;YAC7B;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,QAAQ,GAAG,CAAC,4BAA4B;YAExC,iDAAiD;YACjD,MAAM,SAAS,MAAM,IAAA,kJAAM,EAAC,eAAe;gBACzC,UAAU;gBACV;gBACA;YACF;YAEA,IAAI,mBAAA,6BAAA,OAAQ,KAAK,EAAE;gBACjB,SAAS,OAAO,KAAK;YACvB,OAAO;gBACL,OAAO,IAAI,CAAC;YACd;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,IAAI,OAAO;QACtB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAsD;;;;;;8BAGpE,6LAAC;oBAAK,UAAU;oBAAgB,WAAU;;sCACxC,6LAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,QAAQ;4BACR,WAAU;4BACV,OAAO;4BACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;sCAEzC,6LAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,QAAQ;4BACR,WAAU;4BACV,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;sCAE1C,6LAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,QAAQ;4BACR,WAAU;4BACV,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;wBAE5C,uBAAS,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;sCAC/C,6LAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,WAAU;4BACV,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;sCAG7C,6LAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;8BAKH,6LAAC;oBAAE,WAAU;;wBAA4D;wBAC9C;sCACzB,6LAAC,0KAAI;4BAAC,MAAK;4BAAS,WAAU;sCAAkB;;;;;;;;;;;;;;;;;;;;;;;AAO1D;GA5HwB;;QACP,kJAAS;;;KADF","debugId":null}}]
}